----------------------------------------
-- Generated by Iris Generator
-- The 9/30/2014 at 5:31 PM

-- The %D% at %T% :AreaAttributes
-- 5 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_AreaAttributes_Select_All'))
drop procedure sp_AreaAttributes_Select_All


GO


Create Procedure sp_AreaAttributes_Select_All
AS
BEGIN
    SELECT [SysId],[CreateDate],[LastModifiedDate],[SourceSystem],[MetaImportDate]
    FROM [dbo].[AreaAttributes]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_AreaAttributes_Select_One'))
drop procedure sp_AreaAttributes_Select_One


GO


Create Procedure sp_AreaAttributes_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[CreateDate],[LastModifiedDate],[SourceSystem],[MetaImportDate]
    FROM [dbo].[AreaAttributes]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_AreaAttributes_Insert'))
drop procedure sp_AreaAttributes_Insert


GO


Create Procedure sp_AreaAttributes_Insert
(
@CreateDate datetime,
@LastModifiedDate datetime,
@SourceSystem varchar(max),
@MetaImportDate datetime
)
AS
BEGIN
    INSERT INTO [dbo].[AreaAttributes]
    (
        [CreateDate],
[LastModifiedDate],
[SourceSystem],
[MetaImportDate]
    )
    VALUES
    (
        @CreateDate,
@LastModifiedDate,
@SourceSystem,
@MetaImportDate

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_AreaAttributes_Delete'))
drop procedure sp_AreaAttributes_Delete


GO


Create Procedure sp_AreaAttributes_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[AreaAttributes]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_AreaAttributes_Update'))
drop procedure sp_AreaAttributes_Update


GO


Create Procedure sp_AreaAttributes_Update
(
@SysId int,
@CreateDate datetime,
@LastModifiedDate datetime,
@SourceSystem varchar(max),
@MetaImportDate datetime
)
AS
BEGIN
    UPDATE [dbo].[AreaAttributes]
    SET
        [CreateDate]=@CreateDate,
        [LastModifiedDate]=@LastModifiedDate,
        [SourceSystem]=@SourceSystem,
        [MetaImportDate]=@MetaImportDate
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :AreaLinks
-- 7 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_AreaLinkss_By_ParentAreaSysId'))
drop procedure sp_Select_AreaLinkss_By_ParentAreaSysId


GO


Create Procedure sp_Select_AreaLinkss_By_ParentAreaSysId
(
@ParentAreaSysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[ParentAreaSysId],[ChildAreaSysId],[LinkPath],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[AreaLinks]
    WHERE
        [ParentAreaSysId]=@ParentAreaSysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_AreaLinkss_By_ChildAreaSysId'))
drop procedure sp_Select_AreaLinkss_By_ChildAreaSysId


GO


Create Procedure sp_Select_AreaLinkss_By_ChildAreaSysId
(
@ChildAreaSysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[ParentAreaSysId],[ChildAreaSysId],[LinkPath],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[AreaLinks]
    WHERE
        [ChildAreaSysId]=@ChildAreaSysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_AreaLinks_Select_All'))
drop procedure sp_AreaLinks_Select_All


GO


Create Procedure sp_AreaLinks_Select_All
AS
BEGIN
    SELECT [SysId],[PublicId],[ParentAreaSysId],[ChildAreaSysId],[LinkPath],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[AreaLinks]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_AreaLinks_Select_One'))
drop procedure sp_AreaLinks_Select_One


GO


Create Procedure sp_AreaLinks_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[ParentAreaSysId],[ChildAreaSysId],[LinkPath],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[AreaLinks]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_AreaLinks_Insert'))
drop procedure sp_AreaLinks_Insert


GO


Create Procedure sp_AreaLinks_Insert
(
@PublicId uniqueidentifier,
@ParentAreaSysId int,
@ChildAreaSysId int,
@LinkPath varchar(512),
@CreateDate datetime,
@LastModifiedDate datetime,
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[AreaLinks]
    (
        [PublicId],
[ParentAreaSysId],
[ChildAreaSysId],
[LinkPath],
[CreateDate],
[LastModifiedDate],
[Active]
    )
    VALUES
    (
        @PublicId,
@ParentAreaSysId,
@ChildAreaSysId,
@LinkPath,
@CreateDate,
@LastModifiedDate,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_AreaLinks_Delete'))
drop procedure sp_AreaLinks_Delete


GO


Create Procedure sp_AreaLinks_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[AreaLinks]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_AreaLinks_Update'))
drop procedure sp_AreaLinks_Update


GO


Create Procedure sp_AreaLinks_Update
(
@SysId int,
@PublicId uniqueidentifier,
@ParentAreaSysId int,
@ChildAreaSysId int,
@LinkPath varchar(512),
@CreateDate datetime,
@LastModifiedDate datetime,
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[AreaLinks]
    SET
        [PublicId]=@PublicId,
        [ParentAreaSysId]=@ParentAreaSysId,
        [ChildAreaSysId]=@ChildAreaSysId,
        [LinkPath]=@LinkPath,
        [CreateDate]=@CreateDate,
        [LastModifiedDate]=@LastModifiedDate,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :AreaMetaData
-- 6 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_AreaMetaDatas_By_AreaSysId'))
drop procedure sp_Select_AreaMetaDatas_By_AreaSysId


GO


Create Procedure sp_Select_AreaMetaDatas_By_AreaSysId
(
@AreaSysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[AreaSysId],[KeyPath],[KeyValue],[Active]
    FROM [dbo].[AreaMetaData]
    WHERE
        [AreaSysId]=@AreaSysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_AreaMetaData_Select_All'))
drop procedure sp_AreaMetaData_Select_All


GO


Create Procedure sp_AreaMetaData_Select_All
AS
BEGIN
    SELECT [SysId],[PublicId],[AreaSysId],[KeyPath],[KeyValue],[Active]
    FROM [dbo].[AreaMetaData]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_AreaMetaData_Select_One'))
drop procedure sp_AreaMetaData_Select_One


GO


Create Procedure sp_AreaMetaData_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[AreaSysId],[KeyPath],[KeyValue],[Active]
    FROM [dbo].[AreaMetaData]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_AreaMetaData_Insert'))
drop procedure sp_AreaMetaData_Insert


GO


Create Procedure sp_AreaMetaData_Insert
(
@PublicId uniqueidentifier,
@AreaSysId int,
@KeyPath varchar(256),
@KeyValue varchar(512),
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[AreaMetaData]
    (
        [PublicId],
[AreaSysId],
[KeyPath],
[KeyValue],
[Active]
    )
    VALUES
    (
        @PublicId,
@AreaSysId,
@KeyPath,
@KeyValue,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_AreaMetaData_Delete'))
drop procedure sp_AreaMetaData_Delete


GO


Create Procedure sp_AreaMetaData_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[AreaMetaData]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_AreaMetaData_Update'))
drop procedure sp_AreaMetaData_Update


GO


Create Procedure sp_AreaMetaData_Update
(
@SysId int,
@PublicId uniqueidentifier,
@AreaSysId int,
@KeyPath varchar(256),
@KeyValue varchar(512),
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[AreaMetaData]
    SET
        [PublicId]=@PublicId,
        [AreaSysId]=@AreaSysId,
        [KeyPath]=@KeyPath,
        [KeyValue]=@KeyValue,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :Areas
-- 7 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_Areass_By_AreaStatusSysId'))
drop procedure sp_Select_Areass_By_AreaStatusSysId


GO


Create Procedure sp_Select_Areass_By_AreaStatusSysId
(
@AreaStatusSysId int
)
AS
BEGIN
    SELECT [SysId],[AreaStatusSysId],[AreaTypeSysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Is_ReadOnly],[Active]
    FROM [dbo].[Areas]
    WHERE
        [AreaStatusSysId]=@AreaStatusSysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_Areass_By_AreaTypeSysId'))
drop procedure sp_Select_Areass_By_AreaTypeSysId


GO


Create Procedure sp_Select_Areass_By_AreaTypeSysId
(
@AreaTypeSysId int
)
AS
BEGIN
    SELECT [SysId],[AreaStatusSysId],[AreaTypeSysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Is_ReadOnly],[Active]
    FROM [dbo].[Areas]
    WHERE
        [AreaTypeSysId]=@AreaTypeSysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Areas_Select_All'))
drop procedure sp_Areas_Select_All


GO


Create Procedure sp_Areas_Select_All
AS
BEGIN
    SELECT [SysId],[AreaStatusSysId],[AreaTypeSysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Is_ReadOnly],[Active]
    FROM [dbo].[Areas]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Areas_Select_One'))
drop procedure sp_Areas_Select_One


GO


Create Procedure sp_Areas_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[AreaStatusSysId],[AreaTypeSysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Is_ReadOnly],[Active]
    FROM [dbo].[Areas]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Areas_Insert'))
drop procedure sp_Areas_Insert


GO


Create Procedure sp_Areas_Insert
(
@AreaStatusSysId int,
@AreaTypeSysId int,
@PublicId uniqueidentifier,
@Path varchar(1024),
@CreateDate datetime,
@LastModifiedDate datetime,
@Is_ReadOnly bit,
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[Areas]
    (
        [AreaStatusSysId],
[AreaTypeSysId],
[PublicId],
[Path],
[CreateDate],
[LastModifiedDate],
[Is_ReadOnly],
[Active]
    )
    VALUES
    (
        @AreaStatusSysId,
@AreaTypeSysId,
@PublicId,
@Path,
@CreateDate,
@LastModifiedDate,
@Is_ReadOnly,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Areas_Delete'))
drop procedure sp_Areas_Delete


GO


Create Procedure sp_Areas_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[Areas]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Areas_Update'))
drop procedure sp_Areas_Update


GO


Create Procedure sp_Areas_Update
(
@SysId int,
@AreaStatusSysId int,
@AreaTypeSysId int,
@PublicId uniqueidentifier,
@Path varchar(1024),
@CreateDate datetime,
@LastModifiedDate datetime,
@Is_ReadOnly bit,
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[Areas]
    SET
        [AreaStatusSysId]=@AreaStatusSysId,
        [AreaTypeSysId]=@AreaTypeSysId,
        [PublicId]=@PublicId,
        [Path]=@Path,
        [CreateDate]=@CreateDate,
        [LastModifiedDate]=@LastModifiedDate,
        [Is_ReadOnly]=@Is_ReadOnly,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :AreaStatus
-- 5 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_AreaStatus_Select_All'))
drop procedure sp_AreaStatus_Select_All


GO


Create Procedure sp_AreaStatus_Select_All
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[AreaStatus]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_AreaStatus_Select_One'))
drop procedure sp_AreaStatus_Select_One


GO


Create Procedure sp_AreaStatus_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[AreaStatus]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_AreaStatus_Insert'))
drop procedure sp_AreaStatus_Insert


GO


Create Procedure sp_AreaStatus_Insert
(
@PublicId uniqueidentifier,
@Path varchar(1024),
@CreateDate datetime,
@LastModifiedDate datetime,
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[AreaStatus]
    (
        [PublicId],
[Path],
[CreateDate],
[LastModifiedDate],
[Active]
    )
    VALUES
    (
        @PublicId,
@Path,
@CreateDate,
@LastModifiedDate,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_AreaStatus_Delete'))
drop procedure sp_AreaStatus_Delete


GO


Create Procedure sp_AreaStatus_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[AreaStatus]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_AreaStatus_Update'))
drop procedure sp_AreaStatus_Update


GO


Create Procedure sp_AreaStatus_Update
(
@SysId int,
@PublicId uniqueidentifier,
@Path varchar(1024),
@CreateDate datetime,
@LastModifiedDate datetime,
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[AreaStatus]
    SET
        [PublicId]=@PublicId,
        [Path]=@Path,
        [CreateDate]=@CreateDate,
        [LastModifiedDate]=@LastModifiedDate,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :AreaTags
-- 6 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_AreaTagss_By_SysId'))
drop procedure sp_Select_AreaTagss_By_SysId


GO


Create Procedure sp_Select_AreaTagss_By_SysId
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[AreaSysId],[Tag],[CreateDate],[Active]
    FROM [dbo].[AreaTags]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_AreaTags_Select_All'))
drop procedure sp_AreaTags_Select_All


GO


Create Procedure sp_AreaTags_Select_All
AS
BEGIN
    SELECT [SysId],[AreaSysId],[Tag],[CreateDate],[Active]
    FROM [dbo].[AreaTags]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_AreaTags_Select_One'))
drop procedure sp_AreaTags_Select_One


GO


Create Procedure sp_AreaTags_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[AreaSysId],[Tag],[CreateDate],[Active]
    FROM [dbo].[AreaTags]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_AreaTags_Insert'))
drop procedure sp_AreaTags_Insert


GO


Create Procedure sp_AreaTags_Insert
(
@AreaSysId int,
@Tag varchar(50),
@CreateDate datetime,
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[AreaTags]
    (
        [AreaSysId],
[Tag],
[CreateDate],
[Active]
    )
    VALUES
    (
        @AreaSysId,
@Tag,
@CreateDate,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_AreaTags_Delete'))
drop procedure sp_AreaTags_Delete


GO


Create Procedure sp_AreaTags_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[AreaTags]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_AreaTags_Update'))
drop procedure sp_AreaTags_Update


GO


Create Procedure sp_AreaTags_Update
(
@SysId int,
@AreaSysId int,
@Tag varchar(50),
@CreateDate datetime,
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[AreaTags]
    SET
        [AreaSysId]=@AreaSysId,
        [Tag]=@Tag,
        [CreateDate]=@CreateDate,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :AreaTypes
-- 5 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_AreaTypes_Select_All'))
drop procedure sp_AreaTypes_Select_All


GO


Create Procedure sp_AreaTypes_Select_All
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[AreaTypes]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_AreaTypes_Select_One'))
drop procedure sp_AreaTypes_Select_One


GO


Create Procedure sp_AreaTypes_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[AreaTypes]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_AreaTypes_Insert'))
drop procedure sp_AreaTypes_Insert


GO


Create Procedure sp_AreaTypes_Insert
(
@PublicId uniqueidentifier,
@Path varchar(1024),
@CreateDate datetime,
@LastModifiedDate datetime,
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[AreaTypes]
    (
        [PublicId],
[Path],
[CreateDate],
[LastModifiedDate],
[Active]
    )
    VALUES
    (
        @PublicId,
@Path,
@CreateDate,
@LastModifiedDate,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_AreaTypes_Delete'))
drop procedure sp_AreaTypes_Delete


GO


Create Procedure sp_AreaTypes_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[AreaTypes]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_AreaTypes_Update'))
drop procedure sp_AreaTypes_Update


GO


Create Procedure sp_AreaTypes_Update
(
@SysId int,
@PublicId uniqueidentifier,
@Path varchar(1024),
@CreateDate datetime,
@LastModifiedDate datetime,
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[AreaTypes]
    SET
        [PublicId]=@PublicId,
        [Path]=@Path,
        [CreateDate]=@CreateDate,
        [LastModifiedDate]=@LastModifiedDate,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :IterationAttributes
-- 6 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_IterationAttributess_By_IterationSysId'))
drop procedure sp_Select_IterationAttributess_By_IterationSysId


GO


Create Procedure sp_Select_IterationAttributess_By_IterationSysId
(
@IterationSysId int
)
AS
BEGIN
    SELECT [SysId],[IterationSysId],[CreateDate],[LastModifiedDate],[Description],[IterationNumber]
    FROM [dbo].[IterationAttributes]
    WHERE
        [IterationSysId]=@IterationSysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_IterationAttributes_Select_All'))
drop procedure sp_IterationAttributes_Select_All


GO


Create Procedure sp_IterationAttributes_Select_All
AS
BEGIN
    SELECT [SysId],[IterationSysId],[CreateDate],[LastModifiedDate],[Description],[IterationNumber]
    FROM [dbo].[IterationAttributes]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_IterationAttributes_Select_One'))
drop procedure sp_IterationAttributes_Select_One


GO


Create Procedure sp_IterationAttributes_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[IterationSysId],[CreateDate],[LastModifiedDate],[Description],[IterationNumber]
    FROM [dbo].[IterationAttributes]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_IterationAttributes_Insert'))
drop procedure sp_IterationAttributes_Insert


GO


Create Procedure sp_IterationAttributes_Insert
(
@IterationSysId int,
@CreateDate datetime,
@LastModifiedDate datetime,
@Description varchar(max),
@IterationNumber varchar(20)
)
AS
BEGIN
    INSERT INTO [dbo].[IterationAttributes]
    (
        [IterationSysId],
[CreateDate],
[LastModifiedDate],
[Description],
[IterationNumber]
    )
    VALUES
    (
        @IterationSysId,
@CreateDate,
@LastModifiedDate,
@Description,
@IterationNumber

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_IterationAttributes_Delete'))
drop procedure sp_IterationAttributes_Delete


GO


Create Procedure sp_IterationAttributes_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[IterationAttributes]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_IterationAttributes_Update'))
drop procedure sp_IterationAttributes_Update


GO


Create Procedure sp_IterationAttributes_Update
(
@SysId int,
@IterationSysId int,
@CreateDate datetime,
@LastModifiedDate datetime,
@Description varchar(max),
@IterationNumber varchar(20)
)
AS
BEGIN
    UPDATE [dbo].[IterationAttributes]
    SET
        [IterationSysId]=@IterationSysId,
        [CreateDate]=@CreateDate,
        [LastModifiedDate]=@LastModifiedDate,
        [Description]=@Description,
        [IterationNumber]=@IterationNumber
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :IterationLinks
-- 7 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_IterationLinkss_By_ParentIterationSysId'))
drop procedure sp_Select_IterationLinkss_By_ParentIterationSysId


GO


Create Procedure sp_Select_IterationLinkss_By_ParentIterationSysId
(
@ParentIterationSysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[ParentIterationSysId],[ChildIterationSysId],[LinkPath],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[IterationLinks]
    WHERE
        [ParentIterationSysId]=@ParentIterationSysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_IterationLinkss_By_ChildIterationSysId'))
drop procedure sp_Select_IterationLinkss_By_ChildIterationSysId


GO


Create Procedure sp_Select_IterationLinkss_By_ChildIterationSysId
(
@ChildIterationSysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[ParentIterationSysId],[ChildIterationSysId],[LinkPath],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[IterationLinks]
    WHERE
        [ChildIterationSysId]=@ChildIterationSysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_IterationLinks_Select_All'))
drop procedure sp_IterationLinks_Select_All


GO


Create Procedure sp_IterationLinks_Select_All
AS
BEGIN
    SELECT [SysId],[PublicId],[ParentIterationSysId],[ChildIterationSysId],[LinkPath],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[IterationLinks]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_IterationLinks_Select_One'))
drop procedure sp_IterationLinks_Select_One


GO


Create Procedure sp_IterationLinks_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[ParentIterationSysId],[ChildIterationSysId],[LinkPath],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[IterationLinks]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_IterationLinks_Insert'))
drop procedure sp_IterationLinks_Insert


GO


Create Procedure sp_IterationLinks_Insert
(
@PublicId uniqueidentifier,
@ParentIterationSysId int,
@ChildIterationSysId int,
@LinkPath varchar(512),
@CreateDate datetime,
@LastModifiedDate datetime,
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[IterationLinks]
    (
        [PublicId],
[ParentIterationSysId],
[ChildIterationSysId],
[LinkPath],
[CreateDate],
[LastModifiedDate],
[Active]
    )
    VALUES
    (
        @PublicId,
@ParentIterationSysId,
@ChildIterationSysId,
@LinkPath,
@CreateDate,
@LastModifiedDate,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_IterationLinks_Delete'))
drop procedure sp_IterationLinks_Delete


GO


Create Procedure sp_IterationLinks_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[IterationLinks]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_IterationLinks_Update'))
drop procedure sp_IterationLinks_Update


GO


Create Procedure sp_IterationLinks_Update
(
@SysId int,
@PublicId uniqueidentifier,
@ParentIterationSysId int,
@ChildIterationSysId int,
@LinkPath varchar(512),
@CreateDate datetime,
@LastModifiedDate datetime,
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[IterationLinks]
    SET
        [PublicId]=@PublicId,
        [ParentIterationSysId]=@ParentIterationSysId,
        [ChildIterationSysId]=@ChildIterationSysId,
        [LinkPath]=@LinkPath,
        [CreateDate]=@CreateDate,
        [LastModifiedDate]=@LastModifiedDate,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :IterationMetaData
-- 6 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_IterationMetaDatas_By_IterationSysId'))
drop procedure sp_Select_IterationMetaDatas_By_IterationSysId


GO


Create Procedure sp_Select_IterationMetaDatas_By_IterationSysId
(
@IterationSysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[IterationSysId],[KeyPath],[KeyValue],[Active]
    FROM [dbo].[IterationMetaData]
    WHERE
        [IterationSysId]=@IterationSysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_IterationMetaData_Select_All'))
drop procedure sp_IterationMetaData_Select_All


GO


Create Procedure sp_IterationMetaData_Select_All
AS
BEGIN
    SELECT [SysId],[PublicId],[IterationSysId],[KeyPath],[KeyValue],[Active]
    FROM [dbo].[IterationMetaData]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_IterationMetaData_Select_One'))
drop procedure sp_IterationMetaData_Select_One


GO


Create Procedure sp_IterationMetaData_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[IterationSysId],[KeyPath],[KeyValue],[Active]
    FROM [dbo].[IterationMetaData]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_IterationMetaData_Insert'))
drop procedure sp_IterationMetaData_Insert


GO


Create Procedure sp_IterationMetaData_Insert
(
@PublicId uniqueidentifier,
@IterationSysId int,
@KeyPath varchar(256),
@KeyValue varchar(512),
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[IterationMetaData]
    (
        [PublicId],
[IterationSysId],
[KeyPath],
[KeyValue],
[Active]
    )
    VALUES
    (
        @PublicId,
@IterationSysId,
@KeyPath,
@KeyValue,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_IterationMetaData_Delete'))
drop procedure sp_IterationMetaData_Delete


GO


Create Procedure sp_IterationMetaData_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[IterationMetaData]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_IterationMetaData_Update'))
drop procedure sp_IterationMetaData_Update


GO


Create Procedure sp_IterationMetaData_Update
(
@SysId int,
@PublicId uniqueidentifier,
@IterationSysId int,
@KeyPath varchar(256),
@KeyValue varchar(512),
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[IterationMetaData]
    SET
        [PublicId]=@PublicId,
        [IterationSysId]=@IterationSysId,
        [KeyPath]=@KeyPath,
        [KeyValue]=@KeyValue,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :Iterations
-- 7 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_Iterationss_By_IterationStatusSysId'))
drop procedure sp_Select_Iterationss_By_IterationStatusSysId


GO


Create Procedure sp_Select_Iterationss_By_IterationStatusSysId
(
@IterationStatusSysId int
)
AS
BEGIN
    SELECT [SysId],[IterationStatusSysId],[IterationTypeSysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Is_ReadOnly],[Active]
    FROM [dbo].[Iterations]
    WHERE
        [IterationStatusSysId]=@IterationStatusSysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_Iterationss_By_IterationTypeSysId'))
drop procedure sp_Select_Iterationss_By_IterationTypeSysId


GO


Create Procedure sp_Select_Iterationss_By_IterationTypeSysId
(
@IterationTypeSysId int
)
AS
BEGIN
    SELECT [SysId],[IterationStatusSysId],[IterationTypeSysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Is_ReadOnly],[Active]
    FROM [dbo].[Iterations]
    WHERE
        [IterationTypeSysId]=@IterationTypeSysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Iterations_Select_All'))
drop procedure sp_Iterations_Select_All


GO


Create Procedure sp_Iterations_Select_All
AS
BEGIN
    SELECT [SysId],[IterationStatusSysId],[IterationTypeSysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Is_ReadOnly],[Active]
    FROM [dbo].[Iterations]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Iterations_Select_One'))
drop procedure sp_Iterations_Select_One


GO


Create Procedure sp_Iterations_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[IterationStatusSysId],[IterationTypeSysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Is_ReadOnly],[Active]
    FROM [dbo].[Iterations]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Iterations_Insert'))
drop procedure sp_Iterations_Insert


GO


Create Procedure sp_Iterations_Insert
(
@IterationStatusSysId int,
@IterationTypeSysId int,
@PublicId uniqueidentifier,
@Path varchar(1024),
@CreateDate datetime,
@LastModifiedDate datetime,
@Is_ReadOnly bit,
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[Iterations]
    (
        [IterationStatusSysId],
[IterationTypeSysId],
[PublicId],
[Path],
[CreateDate],
[LastModifiedDate],
[Is_ReadOnly],
[Active]
    )
    VALUES
    (
        @IterationStatusSysId,
@IterationTypeSysId,
@PublicId,
@Path,
@CreateDate,
@LastModifiedDate,
@Is_ReadOnly,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Iterations_Delete'))
drop procedure sp_Iterations_Delete


GO


Create Procedure sp_Iterations_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[Iterations]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Iterations_Update'))
drop procedure sp_Iterations_Update


GO


Create Procedure sp_Iterations_Update
(
@SysId int,
@IterationStatusSysId int,
@IterationTypeSysId int,
@PublicId uniqueidentifier,
@Path varchar(1024),
@CreateDate datetime,
@LastModifiedDate datetime,
@Is_ReadOnly bit,
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[Iterations]
    SET
        [IterationStatusSysId]=@IterationStatusSysId,
        [IterationTypeSysId]=@IterationTypeSysId,
        [PublicId]=@PublicId,
        [Path]=@Path,
        [CreateDate]=@CreateDate,
        [LastModifiedDate]=@LastModifiedDate,
        [Is_ReadOnly]=@Is_ReadOnly,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :IterationStatus
-- 5 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_IterationStatus_Select_All'))
drop procedure sp_IterationStatus_Select_All


GO


Create Procedure sp_IterationStatus_Select_All
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[IterationStatus]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_IterationStatus_Select_One'))
drop procedure sp_IterationStatus_Select_One


GO


Create Procedure sp_IterationStatus_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[IterationStatus]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_IterationStatus_Insert'))
drop procedure sp_IterationStatus_Insert


GO


Create Procedure sp_IterationStatus_Insert
(
@PublicId uniqueidentifier,
@Path varchar(1024),
@CreateDate datetime,
@LastModifiedDate datetime,
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[IterationStatus]
    (
        [PublicId],
[Path],
[CreateDate],
[LastModifiedDate],
[Active]
    )
    VALUES
    (
        @PublicId,
@Path,
@CreateDate,
@LastModifiedDate,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_IterationStatus_Delete'))
drop procedure sp_IterationStatus_Delete


GO


Create Procedure sp_IterationStatus_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[IterationStatus]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_IterationStatus_Update'))
drop procedure sp_IterationStatus_Update


GO


Create Procedure sp_IterationStatus_Update
(
@SysId int,
@PublicId uniqueidentifier,
@Path varchar(1024),
@CreateDate datetime,
@LastModifiedDate datetime,
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[IterationStatus]
    SET
        [PublicId]=@PublicId,
        [Path]=@Path,
        [CreateDate]=@CreateDate,
        [LastModifiedDate]=@LastModifiedDate,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :IterationTags
-- 6 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_IterationTagss_By_SysId'))
drop procedure sp_Select_IterationTagss_By_SysId


GO


Create Procedure sp_Select_IterationTagss_By_SysId
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[IterationSysId],[Tag],[CreateDate],[Active]
    FROM [dbo].[IterationTags]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_IterationTags_Select_All'))
drop procedure sp_IterationTags_Select_All


GO


Create Procedure sp_IterationTags_Select_All
AS
BEGIN
    SELECT [SysId],[IterationSysId],[Tag],[CreateDate],[Active]
    FROM [dbo].[IterationTags]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_IterationTags_Select_One'))
drop procedure sp_IterationTags_Select_One


GO


Create Procedure sp_IterationTags_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[IterationSysId],[Tag],[CreateDate],[Active]
    FROM [dbo].[IterationTags]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_IterationTags_Insert'))
drop procedure sp_IterationTags_Insert


GO


Create Procedure sp_IterationTags_Insert
(
@IterationSysId int,
@Tag varchar(50),
@CreateDate datetime,
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[IterationTags]
    (
        [IterationSysId],
[Tag],
[CreateDate],
[Active]
    )
    VALUES
    (
        @IterationSysId,
@Tag,
@CreateDate,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_IterationTags_Delete'))
drop procedure sp_IterationTags_Delete


GO


Create Procedure sp_IterationTags_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[IterationTags]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_IterationTags_Update'))
drop procedure sp_IterationTags_Update


GO


Create Procedure sp_IterationTags_Update
(
@SysId int,
@IterationSysId int,
@Tag varchar(50),
@CreateDate datetime,
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[IterationTags]
    SET
        [IterationSysId]=@IterationSysId,
        [Tag]=@Tag,
        [CreateDate]=@CreateDate,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :IterationTypes
-- 5 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_IterationTypes_Select_All'))
drop procedure sp_IterationTypes_Select_All


GO


Create Procedure sp_IterationTypes_Select_All
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[IterationTypes]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_IterationTypes_Select_One'))
drop procedure sp_IterationTypes_Select_One


GO


Create Procedure sp_IterationTypes_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[IterationTypes]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_IterationTypes_Insert'))
drop procedure sp_IterationTypes_Insert


GO


Create Procedure sp_IterationTypes_Insert
(
@PublicId uniqueidentifier,
@Path varchar(1024),
@CreateDate datetime,
@LastModifiedDate datetime,
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[IterationTypes]
    (
        [PublicId],
[Path],
[CreateDate],
[LastModifiedDate],
[Active]
    )
    VALUES
    (
        @PublicId,
@Path,
@CreateDate,
@LastModifiedDate,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_IterationTypes_Delete'))
drop procedure sp_IterationTypes_Delete


GO


Create Procedure sp_IterationTypes_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[IterationTypes]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_IterationTypes_Update'))
drop procedure sp_IterationTypes_Update


GO


Create Procedure sp_IterationTypes_Update
(
@SysId int,
@PublicId uniqueidentifier,
@Path varchar(1024),
@CreateDate datetime,
@LastModifiedDate datetime,
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[IterationTypes]
    SET
        [PublicId]=@PublicId,
        [Path]=@Path,
        [CreateDate]=@CreateDate,
        [LastModifiedDate]=@LastModifiedDate,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :ProjectAttributes
-- 6 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_ProjectAttributess_By_ProjectSysId'))
drop procedure sp_Select_ProjectAttributess_By_ProjectSysId


GO


Create Procedure sp_Select_ProjectAttributess_By_ProjectSysId
(
@ProjectSysId int
)
AS
BEGIN
    SELECT [SysId],[ProjectSysId],[CreateDate],[LastModifiedDate],[Description]
    FROM [dbo].[ProjectAttributes]
    WHERE
        [ProjectSysId]=@ProjectSysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_ProjectAttributes_Select_All'))
drop procedure sp_ProjectAttributes_Select_All


GO


Create Procedure sp_ProjectAttributes_Select_All
AS
BEGIN
    SELECT [SysId],[ProjectSysId],[CreateDate],[LastModifiedDate],[Description]
    FROM [dbo].[ProjectAttributes]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_ProjectAttributes_Select_One'))
drop procedure sp_ProjectAttributes_Select_One


GO


Create Procedure sp_ProjectAttributes_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[ProjectSysId],[CreateDate],[LastModifiedDate],[Description]
    FROM [dbo].[ProjectAttributes]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_ProjectAttributes_Insert'))
drop procedure sp_ProjectAttributes_Insert


GO


Create Procedure sp_ProjectAttributes_Insert
(
@ProjectSysId int,
@CreateDate datetime,
@LastModifiedDate datetime,
@Description varchar(max)
)
AS
BEGIN
    INSERT INTO [dbo].[ProjectAttributes]
    (
        [ProjectSysId],
[CreateDate],
[LastModifiedDate],
[Description]
    )
    VALUES
    (
        @ProjectSysId,
@CreateDate,
@LastModifiedDate,
@Description

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_ProjectAttributes_Delete'))
drop procedure sp_ProjectAttributes_Delete


GO


Create Procedure sp_ProjectAttributes_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[ProjectAttributes]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_ProjectAttributes_Update'))
drop procedure sp_ProjectAttributes_Update


GO


Create Procedure sp_ProjectAttributes_Update
(
@SysId int,
@ProjectSysId int,
@CreateDate datetime,
@LastModifiedDate datetime,
@Description varchar(max)
)
AS
BEGIN
    UPDATE [dbo].[ProjectAttributes]
    SET
        [ProjectSysId]=@ProjectSysId,
        [CreateDate]=@CreateDate,
        [LastModifiedDate]=@LastModifiedDate,
        [Description]=@Description
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :ProjectIterations
-- 7 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_ProjectIterationss_By_IterationsysId'))
drop procedure sp_Select_ProjectIterationss_By_IterationsysId


GO


Create Procedure sp_Select_ProjectIterationss_By_IterationsysId
(
@IterationsysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[ProjectSysId],[IterationsysId],[CreateDate],[Active]
    FROM [dbo].[ProjectIterations]
    WHERE
        [IterationsysId]=@IterationsysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_ProjectIterationss_By_ProjectSysId'))
drop procedure sp_Select_ProjectIterationss_By_ProjectSysId


GO


Create Procedure sp_Select_ProjectIterationss_By_ProjectSysId
(
@ProjectSysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[ProjectSysId],[IterationsysId],[CreateDate],[Active]
    FROM [dbo].[ProjectIterations]
    WHERE
        [ProjectSysId]=@ProjectSysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_ProjectIterations_Select_All'))
drop procedure sp_ProjectIterations_Select_All


GO


Create Procedure sp_ProjectIterations_Select_All
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[ProjectSysId],[IterationsysId],[CreateDate],[Active]
    FROM [dbo].[ProjectIterations]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_ProjectIterations_Select_One'))
drop procedure sp_ProjectIterations_Select_One


GO


Create Procedure sp_ProjectIterations_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[ProjectSysId],[IterationsysId],[CreateDate],[Active]
    FROM [dbo].[ProjectIterations]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_ProjectIterations_Insert'))
drop procedure sp_ProjectIterations_Insert


GO


Create Procedure sp_ProjectIterations_Insert
(
@PublicId uniqueidentifier,
@Path varchar(1024),
@ProjectSysId int,
@IterationsysId int,
@CreateDate datetime,
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[ProjectIterations]
    (
        [PublicId],
[Path],
[ProjectSysId],
[IterationsysId],
[CreateDate],
[Active]
    )
    VALUES
    (
        @PublicId,
@Path,
@ProjectSysId,
@IterationsysId,
@CreateDate,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_ProjectIterations_Delete'))
drop procedure sp_ProjectIterations_Delete


GO


Create Procedure sp_ProjectIterations_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[ProjectIterations]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_ProjectIterations_Update'))
drop procedure sp_ProjectIterations_Update


GO


Create Procedure sp_ProjectIterations_Update
(
@SysId int,
@PublicId uniqueidentifier,
@Path varchar(1024),
@ProjectSysId int,
@IterationsysId int,
@CreateDate datetime,
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[ProjectIterations]
    SET
        [PublicId]=@PublicId,
        [Path]=@Path,
        [ProjectSysId]=@ProjectSysId,
        [IterationsysId]=@IterationsysId,
        [CreateDate]=@CreateDate,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :ProjectLinks
-- 7 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_ProjectLinkss_By_ParentProjectSysId'))
drop procedure sp_Select_ProjectLinkss_By_ParentProjectSysId


GO


Create Procedure sp_Select_ProjectLinkss_By_ParentProjectSysId
(
@ParentProjectSysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[ParentProjectSysId],[ChildProjectSysId],[LinkPath],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[ProjectLinks]
    WHERE
        [ParentProjectSysId]=@ParentProjectSysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_ProjectLinkss_By_ChildProjectSysId'))
drop procedure sp_Select_ProjectLinkss_By_ChildProjectSysId


GO


Create Procedure sp_Select_ProjectLinkss_By_ChildProjectSysId
(
@ChildProjectSysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[ParentProjectSysId],[ChildProjectSysId],[LinkPath],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[ProjectLinks]
    WHERE
        [ChildProjectSysId]=@ChildProjectSysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_ProjectLinks_Select_All'))
drop procedure sp_ProjectLinks_Select_All


GO


Create Procedure sp_ProjectLinks_Select_All
AS
BEGIN
    SELECT [SysId],[PublicId],[ParentProjectSysId],[ChildProjectSysId],[LinkPath],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[ProjectLinks]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_ProjectLinks_Select_One'))
drop procedure sp_ProjectLinks_Select_One


GO


Create Procedure sp_ProjectLinks_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[ParentProjectSysId],[ChildProjectSysId],[LinkPath],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[ProjectLinks]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_ProjectLinks_Insert'))
drop procedure sp_ProjectLinks_Insert


GO


Create Procedure sp_ProjectLinks_Insert
(
@PublicId uniqueidentifier,
@ParentProjectSysId int,
@ChildProjectSysId int,
@LinkPath varchar(512),
@CreateDate datetime,
@LastModifiedDate datetime,
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[ProjectLinks]
    (
        [PublicId],
[ParentProjectSysId],
[ChildProjectSysId],
[LinkPath],
[CreateDate],
[LastModifiedDate],
[Active]
    )
    VALUES
    (
        @PublicId,
@ParentProjectSysId,
@ChildProjectSysId,
@LinkPath,
@CreateDate,
@LastModifiedDate,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_ProjectLinks_Delete'))
drop procedure sp_ProjectLinks_Delete


GO


Create Procedure sp_ProjectLinks_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[ProjectLinks]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_ProjectLinks_Update'))
drop procedure sp_ProjectLinks_Update


GO


Create Procedure sp_ProjectLinks_Update
(
@SysId int,
@PublicId uniqueidentifier,
@ParentProjectSysId int,
@ChildProjectSysId int,
@LinkPath varchar(512),
@CreateDate datetime,
@LastModifiedDate datetime,
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[ProjectLinks]
    SET
        [PublicId]=@PublicId,
        [ParentProjectSysId]=@ParentProjectSysId,
        [ChildProjectSysId]=@ChildProjectSysId,
        [LinkPath]=@LinkPath,
        [CreateDate]=@CreateDate,
        [LastModifiedDate]=@LastModifiedDate,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :ProjectMetaData
-- 6 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_ProjectMetaDatas_By_ProjectSysId'))
drop procedure sp_Select_ProjectMetaDatas_By_ProjectSysId


GO


Create Procedure sp_Select_ProjectMetaDatas_By_ProjectSysId
(
@ProjectSysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[ProjectSysId],[KeyPath],[KeyValue],[Active]
    FROM [dbo].[ProjectMetaData]
    WHERE
        [ProjectSysId]=@ProjectSysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_ProjectMetaData_Select_All'))
drop procedure sp_ProjectMetaData_Select_All


GO


Create Procedure sp_ProjectMetaData_Select_All
AS
BEGIN
    SELECT [SysId],[PublicId],[ProjectSysId],[KeyPath],[KeyValue],[Active]
    FROM [dbo].[ProjectMetaData]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_ProjectMetaData_Select_One'))
drop procedure sp_ProjectMetaData_Select_One


GO


Create Procedure sp_ProjectMetaData_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[ProjectSysId],[KeyPath],[KeyValue],[Active]
    FROM [dbo].[ProjectMetaData]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_ProjectMetaData_Insert'))
drop procedure sp_ProjectMetaData_Insert


GO


Create Procedure sp_ProjectMetaData_Insert
(
@PublicId uniqueidentifier,
@ProjectSysId int,
@KeyPath varchar(256),
@KeyValue varchar(512),
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[ProjectMetaData]
    (
        [PublicId],
[ProjectSysId],
[KeyPath],
[KeyValue],
[Active]
    )
    VALUES
    (
        @PublicId,
@ProjectSysId,
@KeyPath,
@KeyValue,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_ProjectMetaData_Delete'))
drop procedure sp_ProjectMetaData_Delete


GO


Create Procedure sp_ProjectMetaData_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[ProjectMetaData]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_ProjectMetaData_Update'))
drop procedure sp_ProjectMetaData_Update


GO


Create Procedure sp_ProjectMetaData_Update
(
@SysId int,
@PublicId uniqueidentifier,
@ProjectSysId int,
@KeyPath varchar(256),
@KeyValue varchar(512),
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[ProjectMetaData]
    SET
        [PublicId]=@PublicId,
        [ProjectSysId]=@ProjectSysId,
        [KeyPath]=@KeyPath,
        [KeyValue]=@KeyValue,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :Projects
-- 7 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_Projectss_By_ProjectStatusSysId'))
drop procedure sp_Select_Projectss_By_ProjectStatusSysId


GO


Create Procedure sp_Select_Projectss_By_ProjectStatusSysId
(
@ProjectStatusSysId int
)
AS
BEGIN
    SELECT [SysId],[ProjectStatusSysId],[ProjectTypeSysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Is_ReadOnly],[Active]
    FROM [dbo].[Projects]
    WHERE
        [ProjectStatusSysId]=@ProjectStatusSysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_Projectss_By_ProjectTypeSysId'))
drop procedure sp_Select_Projectss_By_ProjectTypeSysId


GO


Create Procedure sp_Select_Projectss_By_ProjectTypeSysId
(
@ProjectTypeSysId int
)
AS
BEGIN
    SELECT [SysId],[ProjectStatusSysId],[ProjectTypeSysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Is_ReadOnly],[Active]
    FROM [dbo].[Projects]
    WHERE
        [ProjectTypeSysId]=@ProjectTypeSysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Projects_Select_All'))
drop procedure sp_Projects_Select_All


GO


Create Procedure sp_Projects_Select_All
AS
BEGIN
    SELECT [SysId],[ProjectStatusSysId],[ProjectTypeSysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Is_ReadOnly],[Active]
    FROM [dbo].[Projects]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Projects_Select_One'))
drop procedure sp_Projects_Select_One


GO


Create Procedure sp_Projects_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[ProjectStatusSysId],[ProjectTypeSysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Is_ReadOnly],[Active]
    FROM [dbo].[Projects]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Projects_Insert'))
drop procedure sp_Projects_Insert


GO


Create Procedure sp_Projects_Insert
(
@ProjectStatusSysId int,
@ProjectTypeSysId int,
@PublicId uniqueidentifier,
@Path varchar(1024),
@CreateDate datetime,
@LastModifiedDate datetime,
@Is_ReadOnly bit,
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[Projects]
    (
        [ProjectStatusSysId],
[ProjectTypeSysId],
[PublicId],
[Path],
[CreateDate],
[LastModifiedDate],
[Is_ReadOnly],
[Active]
    )
    VALUES
    (
        @ProjectStatusSysId,
@ProjectTypeSysId,
@PublicId,
@Path,
@CreateDate,
@LastModifiedDate,
@Is_ReadOnly,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Projects_Delete'))
drop procedure sp_Projects_Delete


GO


Create Procedure sp_Projects_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[Projects]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Projects_Update'))
drop procedure sp_Projects_Update


GO


Create Procedure sp_Projects_Update
(
@SysId int,
@ProjectStatusSysId int,
@ProjectTypeSysId int,
@PublicId uniqueidentifier,
@Path varchar(1024),
@CreateDate datetime,
@LastModifiedDate datetime,
@Is_ReadOnly bit,
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[Projects]
    SET
        [ProjectStatusSysId]=@ProjectStatusSysId,
        [ProjectTypeSysId]=@ProjectTypeSysId,
        [PublicId]=@PublicId,
        [Path]=@Path,
        [CreateDate]=@CreateDate,
        [LastModifiedDate]=@LastModifiedDate,
        [Is_ReadOnly]=@Is_ReadOnly,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :ProjectStatus
-- 5 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_ProjectStatus_Select_All'))
drop procedure sp_ProjectStatus_Select_All


GO


Create Procedure sp_ProjectStatus_Select_All
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[ProjectStatus]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_ProjectStatus_Select_One'))
drop procedure sp_ProjectStatus_Select_One


GO


Create Procedure sp_ProjectStatus_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[ProjectStatus]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_ProjectStatus_Insert'))
drop procedure sp_ProjectStatus_Insert


GO


Create Procedure sp_ProjectStatus_Insert
(
@PublicId uniqueidentifier,
@Path varchar(1024),
@CreateDate datetime,
@LastModifiedDate datetime,
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[ProjectStatus]
    (
        [PublicId],
[Path],
[CreateDate],
[LastModifiedDate],
[Active]
    )
    VALUES
    (
        @PublicId,
@Path,
@CreateDate,
@LastModifiedDate,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_ProjectStatus_Delete'))
drop procedure sp_ProjectStatus_Delete


GO


Create Procedure sp_ProjectStatus_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[ProjectStatus]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_ProjectStatus_Update'))
drop procedure sp_ProjectStatus_Update


GO


Create Procedure sp_ProjectStatus_Update
(
@SysId int,
@PublicId uniqueidentifier,
@Path varchar(1024),
@CreateDate datetime,
@LastModifiedDate datetime,
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[ProjectStatus]
    SET
        [PublicId]=@PublicId,
        [Path]=@Path,
        [CreateDate]=@CreateDate,
        [LastModifiedDate]=@LastModifiedDate,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :ProjectTags
-- 6 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_ProjectTagss_By_SysId'))
drop procedure sp_Select_ProjectTagss_By_SysId


GO


Create Procedure sp_Select_ProjectTagss_By_SysId
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[ProjectSysId],[Tag],[CreateDate],[Active]
    FROM [dbo].[ProjectTags]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_ProjectTags_Select_All'))
drop procedure sp_ProjectTags_Select_All


GO


Create Procedure sp_ProjectTags_Select_All
AS
BEGIN
    SELECT [SysId],[ProjectSysId],[Tag],[CreateDate],[Active]
    FROM [dbo].[ProjectTags]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_ProjectTags_Select_One'))
drop procedure sp_ProjectTags_Select_One


GO


Create Procedure sp_ProjectTags_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[ProjectSysId],[Tag],[CreateDate],[Active]
    FROM [dbo].[ProjectTags]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_ProjectTags_Insert'))
drop procedure sp_ProjectTags_Insert


GO


Create Procedure sp_ProjectTags_Insert
(
@ProjectSysId int,
@Tag varchar(50),
@CreateDate datetime,
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[ProjectTags]
    (
        [ProjectSysId],
[Tag],
[CreateDate],
[Active]
    )
    VALUES
    (
        @ProjectSysId,
@Tag,
@CreateDate,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_ProjectTags_Delete'))
drop procedure sp_ProjectTags_Delete


GO


Create Procedure sp_ProjectTags_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[ProjectTags]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_ProjectTags_Update'))
drop procedure sp_ProjectTags_Update


GO


Create Procedure sp_ProjectTags_Update
(
@SysId int,
@ProjectSysId int,
@Tag varchar(50),
@CreateDate datetime,
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[ProjectTags]
    SET
        [ProjectSysId]=@ProjectSysId,
        [Tag]=@Tag,
        [CreateDate]=@CreateDate,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :ProjectTeams
-- 7 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_ProjectTeamss_By_ProjectSysId'))
drop procedure sp_Select_ProjectTeamss_By_ProjectSysId


GO


Create Procedure sp_Select_ProjectTeamss_By_ProjectSysId
(
@ProjectSysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[ProjectSysId],[TeamsysId],[CreateDate],[Active]
    FROM [dbo].[ProjectTeams]
    WHERE
        [ProjectSysId]=@ProjectSysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_ProjectTeamss_By_TeamsysId'))
drop procedure sp_Select_ProjectTeamss_By_TeamsysId


GO


Create Procedure sp_Select_ProjectTeamss_By_TeamsysId
(
@TeamsysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[ProjectSysId],[TeamsysId],[CreateDate],[Active]
    FROM [dbo].[ProjectTeams]
    WHERE
        [TeamsysId]=@TeamsysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_ProjectTeams_Select_All'))
drop procedure sp_ProjectTeams_Select_All


GO


Create Procedure sp_ProjectTeams_Select_All
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[ProjectSysId],[TeamsysId],[CreateDate],[Active]
    FROM [dbo].[ProjectTeams]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_ProjectTeams_Select_One'))
drop procedure sp_ProjectTeams_Select_One


GO


Create Procedure sp_ProjectTeams_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[ProjectSysId],[TeamsysId],[CreateDate],[Active]
    FROM [dbo].[ProjectTeams]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_ProjectTeams_Insert'))
drop procedure sp_ProjectTeams_Insert


GO


Create Procedure sp_ProjectTeams_Insert
(
@PublicId uniqueidentifier,
@Path varchar(1024),
@ProjectSysId int,
@TeamsysId int,
@CreateDate datetime,
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[ProjectTeams]
    (
        [PublicId],
[Path],
[ProjectSysId],
[TeamsysId],
[CreateDate],
[Active]
    )
    VALUES
    (
        @PublicId,
@Path,
@ProjectSysId,
@TeamsysId,
@CreateDate,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_ProjectTeams_Delete'))
drop procedure sp_ProjectTeams_Delete


GO


Create Procedure sp_ProjectTeams_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[ProjectTeams]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_ProjectTeams_Update'))
drop procedure sp_ProjectTeams_Update


GO


Create Procedure sp_ProjectTeams_Update
(
@SysId int,
@PublicId uniqueidentifier,
@Path varchar(1024),
@ProjectSysId int,
@TeamsysId int,
@CreateDate datetime,
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[ProjectTeams]
    SET
        [PublicId]=@PublicId,
        [Path]=@Path,
        [ProjectSysId]=@ProjectSysId,
        [TeamsysId]=@TeamsysId,
        [CreateDate]=@CreateDate,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :ProjectTypes
-- 5 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_ProjectTypes_Select_All'))
drop procedure sp_ProjectTypes_Select_All


GO


Create Procedure sp_ProjectTypes_Select_All
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[ProjectTypes]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_ProjectTypes_Select_One'))
drop procedure sp_ProjectTypes_Select_One


GO


Create Procedure sp_ProjectTypes_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[ProjectTypes]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_ProjectTypes_Insert'))
drop procedure sp_ProjectTypes_Insert


GO


Create Procedure sp_ProjectTypes_Insert
(
@PublicId uniqueidentifier,
@Path varchar(1024),
@CreateDate datetime,
@LastModifiedDate datetime,
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[ProjectTypes]
    (
        [PublicId],
[Path],
[CreateDate],
[LastModifiedDate],
[Active]
    )
    VALUES
    (
        @PublicId,
@Path,
@CreateDate,
@LastModifiedDate,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_ProjectTypes_Delete'))
drop procedure sp_ProjectTypes_Delete


GO


Create Procedure sp_ProjectTypes_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[ProjectTypes]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_ProjectTypes_Update'))
drop procedure sp_ProjectTypes_Update


GO


Create Procedure sp_ProjectTypes_Update
(
@SysId int,
@PublicId uniqueidentifier,
@Path varchar(1024),
@CreateDate datetime,
@LastModifiedDate datetime,
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[ProjectTypes]
    SET
        [PublicId]=@PublicId,
        [Path]=@Path,
        [CreateDate]=@CreateDate,
        [LastModifiedDate]=@LastModifiedDate,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :TaskAreas
-- 7 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_TaskAreass_By_AreasysId'))
drop procedure sp_Select_TaskAreass_By_AreasysId


GO


Create Procedure sp_Select_TaskAreass_By_AreasysId
(
@AreasysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[TaskSysId],[AreasysId],[CreateDate],[Active]
    FROM [dbo].[TaskAreas]
    WHERE
        [AreasysId]=@AreasysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_TaskAreass_By_TaskSysId'))
drop procedure sp_Select_TaskAreass_By_TaskSysId


GO


Create Procedure sp_Select_TaskAreass_By_TaskSysId
(
@TaskSysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[TaskSysId],[AreasysId],[CreateDate],[Active]
    FROM [dbo].[TaskAreas]
    WHERE
        [TaskSysId]=@TaskSysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TaskAreas_Select_All'))
drop procedure sp_TaskAreas_Select_All


GO


Create Procedure sp_TaskAreas_Select_All
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[TaskSysId],[AreasysId],[CreateDate],[Active]
    FROM [dbo].[TaskAreas]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TaskAreas_Select_One'))
drop procedure sp_TaskAreas_Select_One


GO


Create Procedure sp_TaskAreas_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[TaskSysId],[AreasysId],[CreateDate],[Active]
    FROM [dbo].[TaskAreas]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TaskAreas_Insert'))
drop procedure sp_TaskAreas_Insert


GO


Create Procedure sp_TaskAreas_Insert
(
@PublicId uniqueidentifier,
@Path varchar(1024),
@TaskSysId int,
@AreasysId int,
@CreateDate datetime,
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[TaskAreas]
    (
        [PublicId],
[Path],
[TaskSysId],
[AreasysId],
[CreateDate],
[Active]
    )
    VALUES
    (
        @PublicId,
@Path,
@TaskSysId,
@AreasysId,
@CreateDate,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TaskAreas_Delete'))
drop procedure sp_TaskAreas_Delete


GO


Create Procedure sp_TaskAreas_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[TaskAreas]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TaskAreas_Update'))
drop procedure sp_TaskAreas_Update


GO


Create Procedure sp_TaskAreas_Update
(
@SysId int,
@PublicId uniqueidentifier,
@Path varchar(1024),
@TaskSysId int,
@AreasysId int,
@CreateDate datetime,
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[TaskAreas]
    SET
        [PublicId]=@PublicId,
        [Path]=@Path,
        [TaskSysId]=@TaskSysId,
        [AreasysId]=@AreasysId,
        [CreateDate]=@CreateDate,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :TaskAttributes
-- 5 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TaskAttributes_Select_All'))
drop procedure sp_TaskAttributes_Select_All


GO


Create Procedure sp_TaskAttributes_Select_All
AS
BEGIN
    SELECT [SysId],[CreateDate],[LastModifiedDate],[SourceSystem],[MetaImportDate]
    FROM [dbo].[TaskAttributes]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TaskAttributes_Select_One'))
drop procedure sp_TaskAttributes_Select_One


GO


Create Procedure sp_TaskAttributes_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[CreateDate],[LastModifiedDate],[SourceSystem],[MetaImportDate]
    FROM [dbo].[TaskAttributes]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TaskAttributes_Insert'))
drop procedure sp_TaskAttributes_Insert


GO


Create Procedure sp_TaskAttributes_Insert
(
@CreateDate datetime,
@LastModifiedDate datetime,
@SourceSystem varchar(max),
@MetaImportDate datetime
)
AS
BEGIN
    INSERT INTO [dbo].[TaskAttributes]
    (
        [CreateDate],
[LastModifiedDate],
[SourceSystem],
[MetaImportDate]
    )
    VALUES
    (
        @CreateDate,
@LastModifiedDate,
@SourceSystem,
@MetaImportDate

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TaskAttributes_Delete'))
drop procedure sp_TaskAttributes_Delete


GO


Create Procedure sp_TaskAttributes_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[TaskAttributes]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TaskAttributes_Update'))
drop procedure sp_TaskAttributes_Update


GO


Create Procedure sp_TaskAttributes_Update
(
@SysId int,
@CreateDate datetime,
@LastModifiedDate datetime,
@SourceSystem varchar(max),
@MetaImportDate datetime
)
AS
BEGIN
    UPDATE [dbo].[TaskAttributes]
    SET
        [CreateDate]=@CreateDate,
        [LastModifiedDate]=@LastModifiedDate,
        [SourceSystem]=@SourceSystem,
        [MetaImportDate]=@MetaImportDate
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :TaskIterations
-- 7 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_TaskIterationss_By_IterationsysId'))
drop procedure sp_Select_TaskIterationss_By_IterationsysId


GO


Create Procedure sp_Select_TaskIterationss_By_IterationsysId
(
@IterationsysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[TaskSysId],[IterationsysId],[CreateDate],[Active]
    FROM [dbo].[TaskIterations]
    WHERE
        [IterationsysId]=@IterationsysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_TaskIterationss_By_TaskSysId'))
drop procedure sp_Select_TaskIterationss_By_TaskSysId


GO


Create Procedure sp_Select_TaskIterationss_By_TaskSysId
(
@TaskSysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[TaskSysId],[IterationsysId],[CreateDate],[Active]
    FROM [dbo].[TaskIterations]
    WHERE
        [TaskSysId]=@TaskSysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TaskIterations_Select_All'))
drop procedure sp_TaskIterations_Select_All


GO


Create Procedure sp_TaskIterations_Select_All
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[TaskSysId],[IterationsysId],[CreateDate],[Active]
    FROM [dbo].[TaskIterations]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TaskIterations_Select_One'))
drop procedure sp_TaskIterations_Select_One


GO


Create Procedure sp_TaskIterations_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[TaskSysId],[IterationsysId],[CreateDate],[Active]
    FROM [dbo].[TaskIterations]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TaskIterations_Insert'))
drop procedure sp_TaskIterations_Insert


GO


Create Procedure sp_TaskIterations_Insert
(
@PublicId uniqueidentifier,
@Path varchar(1024),
@TaskSysId int,
@IterationsysId int,
@CreateDate datetime,
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[TaskIterations]
    (
        [PublicId],
[Path],
[TaskSysId],
[IterationsysId],
[CreateDate],
[Active]
    )
    VALUES
    (
        @PublicId,
@Path,
@TaskSysId,
@IterationsysId,
@CreateDate,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TaskIterations_Delete'))
drop procedure sp_TaskIterations_Delete


GO


Create Procedure sp_TaskIterations_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[TaskIterations]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TaskIterations_Update'))
drop procedure sp_TaskIterations_Update


GO


Create Procedure sp_TaskIterations_Update
(
@SysId int,
@PublicId uniqueidentifier,
@Path varchar(1024),
@TaskSysId int,
@IterationsysId int,
@CreateDate datetime,
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[TaskIterations]
    SET
        [PublicId]=@PublicId,
        [Path]=@Path,
        [TaskSysId]=@TaskSysId,
        [IterationsysId]=@IterationsysId,
        [CreateDate]=@CreateDate,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :TaskLinks
-- 7 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_TaskLinkss_By_ParentTaskSysId'))
drop procedure sp_Select_TaskLinkss_By_ParentTaskSysId


GO


Create Procedure sp_Select_TaskLinkss_By_ParentTaskSysId
(
@ParentTaskSysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[ParentTaskSysId],[ChildTaskSysId],[LinkPath],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[TaskLinks]
    WHERE
        [ParentTaskSysId]=@ParentTaskSysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_TaskLinkss_By_ChildTaskSysId'))
drop procedure sp_Select_TaskLinkss_By_ChildTaskSysId


GO


Create Procedure sp_Select_TaskLinkss_By_ChildTaskSysId
(
@ChildTaskSysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[ParentTaskSysId],[ChildTaskSysId],[LinkPath],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[TaskLinks]
    WHERE
        [ChildTaskSysId]=@ChildTaskSysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TaskLinks_Select_All'))
drop procedure sp_TaskLinks_Select_All


GO


Create Procedure sp_TaskLinks_Select_All
AS
BEGIN
    SELECT [SysId],[PublicId],[ParentTaskSysId],[ChildTaskSysId],[LinkPath],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[TaskLinks]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TaskLinks_Select_One'))
drop procedure sp_TaskLinks_Select_One


GO


Create Procedure sp_TaskLinks_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[ParentTaskSysId],[ChildTaskSysId],[LinkPath],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[TaskLinks]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TaskLinks_Insert'))
drop procedure sp_TaskLinks_Insert


GO


Create Procedure sp_TaskLinks_Insert
(
@PublicId uniqueidentifier,
@ParentTaskSysId int,
@ChildTaskSysId int,
@LinkPath varchar(512),
@CreateDate datetime,
@LastModifiedDate datetime,
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[TaskLinks]
    (
        [PublicId],
[ParentTaskSysId],
[ChildTaskSysId],
[LinkPath],
[CreateDate],
[LastModifiedDate],
[Active]
    )
    VALUES
    (
        @PublicId,
@ParentTaskSysId,
@ChildTaskSysId,
@LinkPath,
@CreateDate,
@LastModifiedDate,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TaskLinks_Delete'))
drop procedure sp_TaskLinks_Delete


GO


Create Procedure sp_TaskLinks_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[TaskLinks]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TaskLinks_Update'))
drop procedure sp_TaskLinks_Update


GO


Create Procedure sp_TaskLinks_Update
(
@SysId int,
@PublicId uniqueidentifier,
@ParentTaskSysId int,
@ChildTaskSysId int,
@LinkPath varchar(512),
@CreateDate datetime,
@LastModifiedDate datetime,
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[TaskLinks]
    SET
        [PublicId]=@PublicId,
        [ParentTaskSysId]=@ParentTaskSysId,
        [ChildTaskSysId]=@ChildTaskSysId,
        [LinkPath]=@LinkPath,
        [CreateDate]=@CreateDate,
        [LastModifiedDate]=@LastModifiedDate,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :TaskMetaData
-- 6 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_TaskMetaDatas_By_TaskSysId'))
drop procedure sp_Select_TaskMetaDatas_By_TaskSysId


GO


Create Procedure sp_Select_TaskMetaDatas_By_TaskSysId
(
@TaskSysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[TaskSysId],[KeyPath],[KeyValue],[Active]
    FROM [dbo].[TaskMetaData]
    WHERE
        [TaskSysId]=@TaskSysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TaskMetaData_Select_All'))
drop procedure sp_TaskMetaData_Select_All


GO


Create Procedure sp_TaskMetaData_Select_All
AS
BEGIN
    SELECT [SysId],[PublicId],[TaskSysId],[KeyPath],[KeyValue],[Active]
    FROM [dbo].[TaskMetaData]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TaskMetaData_Select_One'))
drop procedure sp_TaskMetaData_Select_One


GO


Create Procedure sp_TaskMetaData_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[TaskSysId],[KeyPath],[KeyValue],[Active]
    FROM [dbo].[TaskMetaData]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TaskMetaData_Insert'))
drop procedure sp_TaskMetaData_Insert


GO


Create Procedure sp_TaskMetaData_Insert
(
@PublicId uniqueidentifier,
@TaskSysId int,
@KeyPath varchar(256),
@KeyValue varchar(512),
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[TaskMetaData]
    (
        [PublicId],
[TaskSysId],
[KeyPath],
[KeyValue],
[Active]
    )
    VALUES
    (
        @PublicId,
@TaskSysId,
@KeyPath,
@KeyValue,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TaskMetaData_Delete'))
drop procedure sp_TaskMetaData_Delete


GO


Create Procedure sp_TaskMetaData_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[TaskMetaData]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TaskMetaData_Update'))
drop procedure sp_TaskMetaData_Update


GO


Create Procedure sp_TaskMetaData_Update
(
@SysId int,
@PublicId uniqueidentifier,
@TaskSysId int,
@KeyPath varchar(256),
@KeyValue varchar(512),
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[TaskMetaData]
    SET
        [PublicId]=@PublicId,
        [TaskSysId]=@TaskSysId,
        [KeyPath]=@KeyPath,
        [KeyValue]=@KeyValue,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :Tasks
-- 7 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_Taskss_By_TaskStatusSysId'))
drop procedure sp_Select_Taskss_By_TaskStatusSysId


GO


Create Procedure sp_Select_Taskss_By_TaskStatusSysId
(
@TaskStatusSysId int
)
AS
BEGIN
    SELECT [SysId],[TaskStatusSysId],[TaskTypeSysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Is_ReadOnly],[Active]
    FROM [dbo].[Tasks]
    WHERE
        [TaskStatusSysId]=@TaskStatusSysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_Taskss_By_TaskTypeSysId'))
drop procedure sp_Select_Taskss_By_TaskTypeSysId


GO


Create Procedure sp_Select_Taskss_By_TaskTypeSysId
(
@TaskTypeSysId int
)
AS
BEGIN
    SELECT [SysId],[TaskStatusSysId],[TaskTypeSysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Is_ReadOnly],[Active]
    FROM [dbo].[Tasks]
    WHERE
        [TaskTypeSysId]=@TaskTypeSysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Tasks_Select_All'))
drop procedure sp_Tasks_Select_All


GO


Create Procedure sp_Tasks_Select_All
AS
BEGIN
    SELECT [SysId],[TaskStatusSysId],[TaskTypeSysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Is_ReadOnly],[Active]
    FROM [dbo].[Tasks]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Tasks_Select_One'))
drop procedure sp_Tasks_Select_One


GO


Create Procedure sp_Tasks_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[TaskStatusSysId],[TaskTypeSysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Is_ReadOnly],[Active]
    FROM [dbo].[Tasks]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Tasks_Insert'))
drop procedure sp_Tasks_Insert


GO


Create Procedure sp_Tasks_Insert
(
@TaskStatusSysId int,
@TaskTypeSysId int,
@PublicId uniqueidentifier,
@Path varchar(1024),
@CreateDate datetime,
@LastModifiedDate datetime,
@Is_ReadOnly bit,
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[Tasks]
    (
        [TaskStatusSysId],
[TaskTypeSysId],
[PublicId],
[Path],
[CreateDate],
[LastModifiedDate],
[Is_ReadOnly],
[Active]
    )
    VALUES
    (
        @TaskStatusSysId,
@TaskTypeSysId,
@PublicId,
@Path,
@CreateDate,
@LastModifiedDate,
@Is_ReadOnly,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Tasks_Delete'))
drop procedure sp_Tasks_Delete


GO


Create Procedure sp_Tasks_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[Tasks]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Tasks_Update'))
drop procedure sp_Tasks_Update


GO


Create Procedure sp_Tasks_Update
(
@SysId int,
@TaskStatusSysId int,
@TaskTypeSysId int,
@PublicId uniqueidentifier,
@Path varchar(1024),
@CreateDate datetime,
@LastModifiedDate datetime,
@Is_ReadOnly bit,
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[Tasks]
    SET
        [TaskStatusSysId]=@TaskStatusSysId,
        [TaskTypeSysId]=@TaskTypeSysId,
        [PublicId]=@PublicId,
        [Path]=@Path,
        [CreateDate]=@CreateDate,
        [LastModifiedDate]=@LastModifiedDate,
        [Is_ReadOnly]=@Is_ReadOnly,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :TaskStatus
-- 5 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TaskStatus_Select_All'))
drop procedure sp_TaskStatus_Select_All


GO


Create Procedure sp_TaskStatus_Select_All
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[TaskStatus]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TaskStatus_Select_One'))
drop procedure sp_TaskStatus_Select_One


GO


Create Procedure sp_TaskStatus_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[TaskStatus]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TaskStatus_Insert'))
drop procedure sp_TaskStatus_Insert


GO


Create Procedure sp_TaskStatus_Insert
(
@PublicId uniqueidentifier,
@Path varchar(1024),
@CreateDate datetime,
@LastModifiedDate datetime,
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[TaskStatus]
    (
        [PublicId],
[Path],
[CreateDate],
[LastModifiedDate],
[Active]
    )
    VALUES
    (
        @PublicId,
@Path,
@CreateDate,
@LastModifiedDate,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TaskStatus_Delete'))
drop procedure sp_TaskStatus_Delete


GO


Create Procedure sp_TaskStatus_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[TaskStatus]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TaskStatus_Update'))
drop procedure sp_TaskStatus_Update


GO


Create Procedure sp_TaskStatus_Update
(
@SysId int,
@PublicId uniqueidentifier,
@Path varchar(1024),
@CreateDate datetime,
@LastModifiedDate datetime,
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[TaskStatus]
    SET
        [PublicId]=@PublicId,
        [Path]=@Path,
        [CreateDate]=@CreateDate,
        [LastModifiedDate]=@LastModifiedDate,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :TaskTags
-- 6 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_TaskTagss_By_SysId'))
drop procedure sp_Select_TaskTagss_By_SysId


GO


Create Procedure sp_Select_TaskTagss_By_SysId
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[TaskSysId],[Tag],[CreateDate],[Active]
    FROM [dbo].[TaskTags]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TaskTags_Select_All'))
drop procedure sp_TaskTags_Select_All


GO


Create Procedure sp_TaskTags_Select_All
AS
BEGIN
    SELECT [SysId],[TaskSysId],[Tag],[CreateDate],[Active]
    FROM [dbo].[TaskTags]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TaskTags_Select_One'))
drop procedure sp_TaskTags_Select_One


GO


Create Procedure sp_TaskTags_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[TaskSysId],[Tag],[CreateDate],[Active]
    FROM [dbo].[TaskTags]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TaskTags_Insert'))
drop procedure sp_TaskTags_Insert


GO


Create Procedure sp_TaskTags_Insert
(
@TaskSysId int,
@Tag varchar(50),
@CreateDate datetime,
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[TaskTags]
    (
        [TaskSysId],
[Tag],
[CreateDate],
[Active]
    )
    VALUES
    (
        @TaskSysId,
@Tag,
@CreateDate,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TaskTags_Delete'))
drop procedure sp_TaskTags_Delete


GO


Create Procedure sp_TaskTags_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[TaskTags]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TaskTags_Update'))
drop procedure sp_TaskTags_Update


GO


Create Procedure sp_TaskTags_Update
(
@SysId int,
@TaskSysId int,
@Tag varchar(50),
@CreateDate datetime,
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[TaskTags]
    SET
        [TaskSysId]=@TaskSysId,
        [Tag]=@Tag,
        [CreateDate]=@CreateDate,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :TaskTeamMembers
-- 7 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_TaskTeamMemberss_By_TaskSysId'))
drop procedure sp_Select_TaskTeamMemberss_By_TaskSysId


GO


Create Procedure sp_Select_TaskTeamMemberss_By_TaskSysId
(
@TaskSysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[TaskSysId],[TeamMembersysId],[CreateDate],[Active]
    FROM [dbo].[TaskTeamMembers]
    WHERE
        [TaskSysId]=@TaskSysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_TaskTeamMemberss_By_TeamMembersysId'))
drop procedure sp_Select_TaskTeamMemberss_By_TeamMembersysId


GO


Create Procedure sp_Select_TaskTeamMemberss_By_TeamMembersysId
(
@TeamMembersysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[TaskSysId],[TeamMembersysId],[CreateDate],[Active]
    FROM [dbo].[TaskTeamMembers]
    WHERE
        [TeamMembersysId]=@TeamMembersysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TaskTeamMembers_Select_All'))
drop procedure sp_TaskTeamMembers_Select_All


GO


Create Procedure sp_TaskTeamMembers_Select_All
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[TaskSysId],[TeamMembersysId],[CreateDate],[Active]
    FROM [dbo].[TaskTeamMembers]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TaskTeamMembers_Select_One'))
drop procedure sp_TaskTeamMembers_Select_One


GO


Create Procedure sp_TaskTeamMembers_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[TaskSysId],[TeamMembersysId],[CreateDate],[Active]
    FROM [dbo].[TaskTeamMembers]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TaskTeamMembers_Insert'))
drop procedure sp_TaskTeamMembers_Insert


GO


Create Procedure sp_TaskTeamMembers_Insert
(
@PublicId uniqueidentifier,
@Path varchar(1024),
@TaskSysId int,
@TeamMembersysId int,
@CreateDate datetime,
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[TaskTeamMembers]
    (
        [PublicId],
[Path],
[TaskSysId],
[TeamMembersysId],
[CreateDate],
[Active]
    )
    VALUES
    (
        @PublicId,
@Path,
@TaskSysId,
@TeamMembersysId,
@CreateDate,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TaskTeamMembers_Delete'))
drop procedure sp_TaskTeamMembers_Delete


GO


Create Procedure sp_TaskTeamMembers_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[TaskTeamMembers]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TaskTeamMembers_Update'))
drop procedure sp_TaskTeamMembers_Update


GO


Create Procedure sp_TaskTeamMembers_Update
(
@SysId int,
@PublicId uniqueidentifier,
@Path varchar(1024),
@TaskSysId int,
@TeamMembersysId int,
@CreateDate datetime,
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[TaskTeamMembers]
    SET
        [PublicId]=@PublicId,
        [Path]=@Path,
        [TaskSysId]=@TaskSysId,
        [TeamMembersysId]=@TeamMembersysId,
        [CreateDate]=@CreateDate,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :TaskTimeEntrys
-- 7 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_TaskTimeEntryss_By_TaskSysId'))
drop procedure sp_Select_TaskTimeEntryss_By_TaskSysId


GO


Create Procedure sp_Select_TaskTimeEntryss_By_TaskSysId
(
@TaskSysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[TaskSysId],[TimeEntrysysId],[CreateDate],[Active]
    FROM [dbo].[TaskTimeEntrys]
    WHERE
        [TaskSysId]=@TaskSysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_TaskTimeEntryss_By_TimeEntrysysId'))
drop procedure sp_Select_TaskTimeEntryss_By_TimeEntrysysId


GO


Create Procedure sp_Select_TaskTimeEntryss_By_TimeEntrysysId
(
@TimeEntrysysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[TaskSysId],[TimeEntrysysId],[CreateDate],[Active]
    FROM [dbo].[TaskTimeEntrys]
    WHERE
        [TimeEntrysysId]=@TimeEntrysysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TaskTimeEntrys_Select_All'))
drop procedure sp_TaskTimeEntrys_Select_All


GO


Create Procedure sp_TaskTimeEntrys_Select_All
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[TaskSysId],[TimeEntrysysId],[CreateDate],[Active]
    FROM [dbo].[TaskTimeEntrys]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TaskTimeEntrys_Select_One'))
drop procedure sp_TaskTimeEntrys_Select_One


GO


Create Procedure sp_TaskTimeEntrys_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[TaskSysId],[TimeEntrysysId],[CreateDate],[Active]
    FROM [dbo].[TaskTimeEntrys]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TaskTimeEntrys_Insert'))
drop procedure sp_TaskTimeEntrys_Insert


GO


Create Procedure sp_TaskTimeEntrys_Insert
(
@PublicId uniqueidentifier,
@Path varchar(1024),
@TaskSysId int,
@TimeEntrysysId int,
@CreateDate datetime,
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[TaskTimeEntrys]
    (
        [PublicId],
[Path],
[TaskSysId],
[TimeEntrysysId],
[CreateDate],
[Active]
    )
    VALUES
    (
        @PublicId,
@Path,
@TaskSysId,
@TimeEntrysysId,
@CreateDate,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TaskTimeEntrys_Delete'))
drop procedure sp_TaskTimeEntrys_Delete


GO


Create Procedure sp_TaskTimeEntrys_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[TaskTimeEntrys]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TaskTimeEntrys_Update'))
drop procedure sp_TaskTimeEntrys_Update


GO


Create Procedure sp_TaskTimeEntrys_Update
(
@SysId int,
@PublicId uniqueidentifier,
@Path varchar(1024),
@TaskSysId int,
@TimeEntrysysId int,
@CreateDate datetime,
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[TaskTimeEntrys]
    SET
        [PublicId]=@PublicId,
        [Path]=@Path,
        [TaskSysId]=@TaskSysId,
        [TimeEntrysysId]=@TimeEntrysysId,
        [CreateDate]=@CreateDate,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :TaskTypes
-- 5 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TaskTypes_Select_All'))
drop procedure sp_TaskTypes_Select_All


GO


Create Procedure sp_TaskTypes_Select_All
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[TaskTypes]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TaskTypes_Select_One'))
drop procedure sp_TaskTypes_Select_One


GO


Create Procedure sp_TaskTypes_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[TaskTypes]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TaskTypes_Insert'))
drop procedure sp_TaskTypes_Insert


GO


Create Procedure sp_TaskTypes_Insert
(
@PublicId uniqueidentifier,
@Path varchar(1024),
@CreateDate datetime,
@LastModifiedDate datetime,
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[TaskTypes]
    (
        [PublicId],
[Path],
[CreateDate],
[LastModifiedDate],
[Active]
    )
    VALUES
    (
        @PublicId,
@Path,
@CreateDate,
@LastModifiedDate,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TaskTypes_Delete'))
drop procedure sp_TaskTypes_Delete


GO


Create Procedure sp_TaskTypes_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[TaskTypes]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TaskTypes_Update'))
drop procedure sp_TaskTypes_Update


GO


Create Procedure sp_TaskTypes_Update
(
@SysId int,
@PublicId uniqueidentifier,
@Path varchar(1024),
@CreateDate datetime,
@LastModifiedDate datetime,
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[TaskTypes]
    SET
        [PublicId]=@PublicId,
        [Path]=@Path,
        [CreateDate]=@CreateDate,
        [LastModifiedDate]=@LastModifiedDate,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :TeamAttributes
-- 5 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamAttributes_Select_All'))
drop procedure sp_TeamAttributes_Select_All


GO


Create Procedure sp_TeamAttributes_Select_All
AS
BEGIN
    SELECT [SysId],[CreateDate],[LastModifiedDate],[SourceSystem],[MetaImportDate]
    FROM [dbo].[TeamAttributes]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamAttributes_Select_One'))
drop procedure sp_TeamAttributes_Select_One


GO


Create Procedure sp_TeamAttributes_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[CreateDate],[LastModifiedDate],[SourceSystem],[MetaImportDate]
    FROM [dbo].[TeamAttributes]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamAttributes_Insert'))
drop procedure sp_TeamAttributes_Insert


GO


Create Procedure sp_TeamAttributes_Insert
(
@CreateDate datetime,
@LastModifiedDate datetime,
@SourceSystem varchar(max),
@MetaImportDate datetime
)
AS
BEGIN
    INSERT INTO [dbo].[TeamAttributes]
    (
        [CreateDate],
[LastModifiedDate],
[SourceSystem],
[MetaImportDate]
    )
    VALUES
    (
        @CreateDate,
@LastModifiedDate,
@SourceSystem,
@MetaImportDate

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamAttributes_Delete'))
drop procedure sp_TeamAttributes_Delete


GO


Create Procedure sp_TeamAttributes_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[TeamAttributes]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamAttributes_Update'))
drop procedure sp_TeamAttributes_Update


GO


Create Procedure sp_TeamAttributes_Update
(
@SysId int,
@CreateDate datetime,
@LastModifiedDate datetime,
@SourceSystem varchar(max),
@MetaImportDate datetime
)
AS
BEGIN
    UPDATE [dbo].[TeamAttributes]
    SET
        [CreateDate]=@CreateDate,
        [LastModifiedDate]=@LastModifiedDate,
        [SourceSystem]=@SourceSystem,
        [MetaImportDate]=@MetaImportDate
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :TeamLinks
-- 7 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_TeamLinkss_By_ParentTeamSysId'))
drop procedure sp_Select_TeamLinkss_By_ParentTeamSysId


GO


Create Procedure sp_Select_TeamLinkss_By_ParentTeamSysId
(
@ParentTeamSysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[ParentTeamSysId],[ChildTeamSysId],[LinkPath],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[TeamLinks]
    WHERE
        [ParentTeamSysId]=@ParentTeamSysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_TeamLinkss_By_ChildTeamSysId'))
drop procedure sp_Select_TeamLinkss_By_ChildTeamSysId


GO


Create Procedure sp_Select_TeamLinkss_By_ChildTeamSysId
(
@ChildTeamSysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[ParentTeamSysId],[ChildTeamSysId],[LinkPath],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[TeamLinks]
    WHERE
        [ChildTeamSysId]=@ChildTeamSysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamLinks_Select_All'))
drop procedure sp_TeamLinks_Select_All


GO


Create Procedure sp_TeamLinks_Select_All
AS
BEGIN
    SELECT [SysId],[PublicId],[ParentTeamSysId],[ChildTeamSysId],[LinkPath],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[TeamLinks]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamLinks_Select_One'))
drop procedure sp_TeamLinks_Select_One


GO


Create Procedure sp_TeamLinks_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[ParentTeamSysId],[ChildTeamSysId],[LinkPath],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[TeamLinks]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamLinks_Insert'))
drop procedure sp_TeamLinks_Insert


GO


Create Procedure sp_TeamLinks_Insert
(
@PublicId uniqueidentifier,
@ParentTeamSysId int,
@ChildTeamSysId int,
@LinkPath varchar(512),
@CreateDate datetime,
@LastModifiedDate datetime,
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[TeamLinks]
    (
        [PublicId],
[ParentTeamSysId],
[ChildTeamSysId],
[LinkPath],
[CreateDate],
[LastModifiedDate],
[Active]
    )
    VALUES
    (
        @PublicId,
@ParentTeamSysId,
@ChildTeamSysId,
@LinkPath,
@CreateDate,
@LastModifiedDate,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamLinks_Delete'))
drop procedure sp_TeamLinks_Delete


GO


Create Procedure sp_TeamLinks_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[TeamLinks]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamLinks_Update'))
drop procedure sp_TeamLinks_Update


GO


Create Procedure sp_TeamLinks_Update
(
@SysId int,
@PublicId uniqueidentifier,
@ParentTeamSysId int,
@ChildTeamSysId int,
@LinkPath varchar(512),
@CreateDate datetime,
@LastModifiedDate datetime,
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[TeamLinks]
    SET
        [PublicId]=@PublicId,
        [ParentTeamSysId]=@ParentTeamSysId,
        [ChildTeamSysId]=@ChildTeamSysId,
        [LinkPath]=@LinkPath,
        [CreateDate]=@CreateDate,
        [LastModifiedDate]=@LastModifiedDate,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :TeamMemberAttributes
-- 5 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamMemberAttributes_Select_All'))
drop procedure sp_TeamMemberAttributes_Select_All


GO


Create Procedure sp_TeamMemberAttributes_Select_All
AS
BEGIN
    SELECT [SysId],[CreateDate],[LastModifiedDate],[SourceSystem],[MetaImportDate]
    FROM [dbo].[TeamMemberAttributes]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamMemberAttributes_Select_One'))
drop procedure sp_TeamMemberAttributes_Select_One


GO


Create Procedure sp_TeamMemberAttributes_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[CreateDate],[LastModifiedDate],[SourceSystem],[MetaImportDate]
    FROM [dbo].[TeamMemberAttributes]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamMemberAttributes_Insert'))
drop procedure sp_TeamMemberAttributes_Insert


GO


Create Procedure sp_TeamMemberAttributes_Insert
(
@CreateDate datetime,
@LastModifiedDate datetime,
@SourceSystem varchar(max),
@MetaImportDate datetime
)
AS
BEGIN
    INSERT INTO [dbo].[TeamMemberAttributes]
    (
        [CreateDate],
[LastModifiedDate],
[SourceSystem],
[MetaImportDate]
    )
    VALUES
    (
        @CreateDate,
@LastModifiedDate,
@SourceSystem,
@MetaImportDate

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamMemberAttributes_Delete'))
drop procedure sp_TeamMemberAttributes_Delete


GO


Create Procedure sp_TeamMemberAttributes_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[TeamMemberAttributes]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamMemberAttributes_Update'))
drop procedure sp_TeamMemberAttributes_Update


GO


Create Procedure sp_TeamMemberAttributes_Update
(
@SysId int,
@CreateDate datetime,
@LastModifiedDate datetime,
@SourceSystem varchar(max),
@MetaImportDate datetime
)
AS
BEGIN
    UPDATE [dbo].[TeamMemberAttributes]
    SET
        [CreateDate]=@CreateDate,
        [LastModifiedDate]=@LastModifiedDate,
        [SourceSystem]=@SourceSystem,
        [MetaImportDate]=@MetaImportDate
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :TeamMemberLinks
-- 7 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_TeamMemberLinkss_By_ParentTeamMemberSysId'))
drop procedure sp_Select_TeamMemberLinkss_By_ParentTeamMemberSysId


GO


Create Procedure sp_Select_TeamMemberLinkss_By_ParentTeamMemberSysId
(
@ParentTeamMemberSysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[ParentTeamMemberSysId],[ChildTeamMemberSysId],[LinkPath],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[TeamMemberLinks]
    WHERE
        [ParentTeamMemberSysId]=@ParentTeamMemberSysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_TeamMemberLinkss_By_ChildTeamMemberSysId'))
drop procedure sp_Select_TeamMemberLinkss_By_ChildTeamMemberSysId


GO


Create Procedure sp_Select_TeamMemberLinkss_By_ChildTeamMemberSysId
(
@ChildTeamMemberSysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[ParentTeamMemberSysId],[ChildTeamMemberSysId],[LinkPath],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[TeamMemberLinks]
    WHERE
        [ChildTeamMemberSysId]=@ChildTeamMemberSysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamMemberLinks_Select_All'))
drop procedure sp_TeamMemberLinks_Select_All


GO


Create Procedure sp_TeamMemberLinks_Select_All
AS
BEGIN
    SELECT [SysId],[PublicId],[ParentTeamMemberSysId],[ChildTeamMemberSysId],[LinkPath],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[TeamMemberLinks]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamMemberLinks_Select_One'))
drop procedure sp_TeamMemberLinks_Select_One


GO


Create Procedure sp_TeamMemberLinks_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[ParentTeamMemberSysId],[ChildTeamMemberSysId],[LinkPath],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[TeamMemberLinks]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamMemberLinks_Insert'))
drop procedure sp_TeamMemberLinks_Insert


GO


Create Procedure sp_TeamMemberLinks_Insert
(
@PublicId uniqueidentifier,
@ParentTeamMemberSysId int,
@ChildTeamMemberSysId int,
@LinkPath varchar(512),
@CreateDate datetime,
@LastModifiedDate datetime,
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[TeamMemberLinks]
    (
        [PublicId],
[ParentTeamMemberSysId],
[ChildTeamMemberSysId],
[LinkPath],
[CreateDate],
[LastModifiedDate],
[Active]
    )
    VALUES
    (
        @PublicId,
@ParentTeamMemberSysId,
@ChildTeamMemberSysId,
@LinkPath,
@CreateDate,
@LastModifiedDate,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamMemberLinks_Delete'))
drop procedure sp_TeamMemberLinks_Delete


GO


Create Procedure sp_TeamMemberLinks_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[TeamMemberLinks]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamMemberLinks_Update'))
drop procedure sp_TeamMemberLinks_Update


GO


Create Procedure sp_TeamMemberLinks_Update
(
@SysId int,
@PublicId uniqueidentifier,
@ParentTeamMemberSysId int,
@ChildTeamMemberSysId int,
@LinkPath varchar(512),
@CreateDate datetime,
@LastModifiedDate datetime,
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[TeamMemberLinks]
    SET
        [PublicId]=@PublicId,
        [ParentTeamMemberSysId]=@ParentTeamMemberSysId,
        [ChildTeamMemberSysId]=@ChildTeamMemberSysId,
        [LinkPath]=@LinkPath,
        [CreateDate]=@CreateDate,
        [LastModifiedDate]=@LastModifiedDate,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :TeamMemberMetaData
-- 6 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_TeamMemberMetaDatas_By_TeamMemberSysId'))
drop procedure sp_Select_TeamMemberMetaDatas_By_TeamMemberSysId


GO


Create Procedure sp_Select_TeamMemberMetaDatas_By_TeamMemberSysId
(
@TeamMemberSysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[TeamMemberSysId],[KeyPath],[KeyValue],[Active]
    FROM [dbo].[TeamMemberMetaData]
    WHERE
        [TeamMemberSysId]=@TeamMemberSysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamMemberMetaData_Select_All'))
drop procedure sp_TeamMemberMetaData_Select_All


GO


Create Procedure sp_TeamMemberMetaData_Select_All
AS
BEGIN
    SELECT [SysId],[PublicId],[TeamMemberSysId],[KeyPath],[KeyValue],[Active]
    FROM [dbo].[TeamMemberMetaData]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamMemberMetaData_Select_One'))
drop procedure sp_TeamMemberMetaData_Select_One


GO


Create Procedure sp_TeamMemberMetaData_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[TeamMemberSysId],[KeyPath],[KeyValue],[Active]
    FROM [dbo].[TeamMemberMetaData]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamMemberMetaData_Insert'))
drop procedure sp_TeamMemberMetaData_Insert


GO


Create Procedure sp_TeamMemberMetaData_Insert
(
@PublicId uniqueidentifier,
@TeamMemberSysId int,
@KeyPath varchar(256),
@KeyValue varchar(512),
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[TeamMemberMetaData]
    (
        [PublicId],
[TeamMemberSysId],
[KeyPath],
[KeyValue],
[Active]
    )
    VALUES
    (
        @PublicId,
@TeamMemberSysId,
@KeyPath,
@KeyValue,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamMemberMetaData_Delete'))
drop procedure sp_TeamMemberMetaData_Delete


GO


Create Procedure sp_TeamMemberMetaData_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[TeamMemberMetaData]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamMemberMetaData_Update'))
drop procedure sp_TeamMemberMetaData_Update


GO


Create Procedure sp_TeamMemberMetaData_Update
(
@SysId int,
@PublicId uniqueidentifier,
@TeamMemberSysId int,
@KeyPath varchar(256),
@KeyValue varchar(512),
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[TeamMemberMetaData]
    SET
        [PublicId]=@PublicId,
        [TeamMemberSysId]=@TeamMemberSysId,
        [KeyPath]=@KeyPath,
        [KeyValue]=@KeyValue,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :TeamMembers
-- 7 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_TeamMemberss_By_TeamMemberStatusSysId'))
drop procedure sp_Select_TeamMemberss_By_TeamMemberStatusSysId


GO


Create Procedure sp_Select_TeamMemberss_By_TeamMemberStatusSysId
(
@TeamMemberStatusSysId int
)
AS
BEGIN
    SELECT [SysId],[TeamMemberStatusSysId],[TeamMemberTypeSysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Is_ReadOnly],[Active]
    FROM [dbo].[TeamMembers]
    WHERE
        [TeamMemberStatusSysId]=@TeamMemberStatusSysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_TeamMemberss_By_TeamMemberTypeSysId'))
drop procedure sp_Select_TeamMemberss_By_TeamMemberTypeSysId


GO


Create Procedure sp_Select_TeamMemberss_By_TeamMemberTypeSysId
(
@TeamMemberTypeSysId int
)
AS
BEGIN
    SELECT [SysId],[TeamMemberStatusSysId],[TeamMemberTypeSysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Is_ReadOnly],[Active]
    FROM [dbo].[TeamMembers]
    WHERE
        [TeamMemberTypeSysId]=@TeamMemberTypeSysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamMembers_Select_All'))
drop procedure sp_TeamMembers_Select_All


GO


Create Procedure sp_TeamMembers_Select_All
AS
BEGIN
    SELECT [SysId],[TeamMemberStatusSysId],[TeamMemberTypeSysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Is_ReadOnly],[Active]
    FROM [dbo].[TeamMembers]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamMembers_Select_One'))
drop procedure sp_TeamMembers_Select_One


GO


Create Procedure sp_TeamMembers_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[TeamMemberStatusSysId],[TeamMemberTypeSysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Is_ReadOnly],[Active]
    FROM [dbo].[TeamMembers]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamMembers_Insert'))
drop procedure sp_TeamMembers_Insert


GO


Create Procedure sp_TeamMembers_Insert
(
@TeamMemberStatusSysId int,
@TeamMemberTypeSysId int,
@PublicId uniqueidentifier,
@Path varchar(1024),
@CreateDate datetime,
@LastModifiedDate datetime,
@Is_ReadOnly bit,
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[TeamMembers]
    (
        [TeamMemberStatusSysId],
[TeamMemberTypeSysId],
[PublicId],
[Path],
[CreateDate],
[LastModifiedDate],
[Is_ReadOnly],
[Active]
    )
    VALUES
    (
        @TeamMemberStatusSysId,
@TeamMemberTypeSysId,
@PublicId,
@Path,
@CreateDate,
@LastModifiedDate,
@Is_ReadOnly,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamMembers_Delete'))
drop procedure sp_TeamMembers_Delete


GO


Create Procedure sp_TeamMembers_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[TeamMembers]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamMembers_Update'))
drop procedure sp_TeamMembers_Update


GO


Create Procedure sp_TeamMembers_Update
(
@SysId int,
@TeamMemberStatusSysId int,
@TeamMemberTypeSysId int,
@PublicId uniqueidentifier,
@Path varchar(1024),
@CreateDate datetime,
@LastModifiedDate datetime,
@Is_ReadOnly bit,
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[TeamMembers]
    SET
        [TeamMemberStatusSysId]=@TeamMemberStatusSysId,
        [TeamMemberTypeSysId]=@TeamMemberTypeSysId,
        [PublicId]=@PublicId,
        [Path]=@Path,
        [CreateDate]=@CreateDate,
        [LastModifiedDate]=@LastModifiedDate,
        [Is_ReadOnly]=@Is_ReadOnly,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :TeamMemberStatus
-- 5 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamMemberStatus_Select_All'))
drop procedure sp_TeamMemberStatus_Select_All


GO


Create Procedure sp_TeamMemberStatus_Select_All
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[TeamMemberStatus]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamMemberStatus_Select_One'))
drop procedure sp_TeamMemberStatus_Select_One


GO


Create Procedure sp_TeamMemberStatus_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[TeamMemberStatus]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamMemberStatus_Insert'))
drop procedure sp_TeamMemberStatus_Insert


GO


Create Procedure sp_TeamMemberStatus_Insert
(
@PublicId uniqueidentifier,
@Path varchar(1024),
@CreateDate datetime,
@LastModifiedDate datetime,
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[TeamMemberStatus]
    (
        [PublicId],
[Path],
[CreateDate],
[LastModifiedDate],
[Active]
    )
    VALUES
    (
        @PublicId,
@Path,
@CreateDate,
@LastModifiedDate,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamMemberStatus_Delete'))
drop procedure sp_TeamMemberStatus_Delete


GO


Create Procedure sp_TeamMemberStatus_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[TeamMemberStatus]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamMemberStatus_Update'))
drop procedure sp_TeamMemberStatus_Update


GO


Create Procedure sp_TeamMemberStatus_Update
(
@SysId int,
@PublicId uniqueidentifier,
@Path varchar(1024),
@CreateDate datetime,
@LastModifiedDate datetime,
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[TeamMemberStatus]
    SET
        [PublicId]=@PublicId,
        [Path]=@Path,
        [CreateDate]=@CreateDate,
        [LastModifiedDate]=@LastModifiedDate,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :TeamMemberTags
-- 6 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_TeamMemberTagss_By_SysId'))
drop procedure sp_Select_TeamMemberTagss_By_SysId


GO


Create Procedure sp_Select_TeamMemberTagss_By_SysId
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[TeamMemberSysId],[Tag],[CreateDate],[Active]
    FROM [dbo].[TeamMemberTags]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamMemberTags_Select_All'))
drop procedure sp_TeamMemberTags_Select_All


GO


Create Procedure sp_TeamMemberTags_Select_All
AS
BEGIN
    SELECT [SysId],[TeamMemberSysId],[Tag],[CreateDate],[Active]
    FROM [dbo].[TeamMemberTags]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamMemberTags_Select_One'))
drop procedure sp_TeamMemberTags_Select_One


GO


Create Procedure sp_TeamMemberTags_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[TeamMemberSysId],[Tag],[CreateDate],[Active]
    FROM [dbo].[TeamMemberTags]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamMemberTags_Insert'))
drop procedure sp_TeamMemberTags_Insert


GO


Create Procedure sp_TeamMemberTags_Insert
(
@TeamMemberSysId int,
@Tag varchar(50),
@CreateDate datetime,
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[TeamMemberTags]
    (
        [TeamMemberSysId],
[Tag],
[CreateDate],
[Active]
    )
    VALUES
    (
        @TeamMemberSysId,
@Tag,
@CreateDate,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamMemberTags_Delete'))
drop procedure sp_TeamMemberTags_Delete


GO


Create Procedure sp_TeamMemberTags_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[TeamMemberTags]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamMemberTags_Update'))
drop procedure sp_TeamMemberTags_Update


GO


Create Procedure sp_TeamMemberTags_Update
(
@SysId int,
@TeamMemberSysId int,
@Tag varchar(50),
@CreateDate datetime,
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[TeamMemberTags]
    SET
        [TeamMemberSysId]=@TeamMemberSysId,
        [Tag]=@Tag,
        [CreateDate]=@CreateDate,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :TeamMemberTypes
-- 5 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamMemberTypes_Select_All'))
drop procedure sp_TeamMemberTypes_Select_All


GO


Create Procedure sp_TeamMemberTypes_Select_All
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[TeamMemberTypes]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamMemberTypes_Select_One'))
drop procedure sp_TeamMemberTypes_Select_One


GO


Create Procedure sp_TeamMemberTypes_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[TeamMemberTypes]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamMemberTypes_Insert'))
drop procedure sp_TeamMemberTypes_Insert


GO


Create Procedure sp_TeamMemberTypes_Insert
(
@PublicId uniqueidentifier,
@Path varchar(1024),
@CreateDate datetime,
@LastModifiedDate datetime,
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[TeamMemberTypes]
    (
        [PublicId],
[Path],
[CreateDate],
[LastModifiedDate],
[Active]
    )
    VALUES
    (
        @PublicId,
@Path,
@CreateDate,
@LastModifiedDate,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamMemberTypes_Delete'))
drop procedure sp_TeamMemberTypes_Delete


GO


Create Procedure sp_TeamMemberTypes_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[TeamMemberTypes]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamMemberTypes_Update'))
drop procedure sp_TeamMemberTypes_Update


GO


Create Procedure sp_TeamMemberTypes_Update
(
@SysId int,
@PublicId uniqueidentifier,
@Path varchar(1024),
@CreateDate datetime,
@LastModifiedDate datetime,
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[TeamMemberTypes]
    SET
        [PublicId]=@PublicId,
        [Path]=@Path,
        [CreateDate]=@CreateDate,
        [LastModifiedDate]=@LastModifiedDate,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :TeamMetaData
-- 6 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_TeamMetaDatas_By_TeamSysId'))
drop procedure sp_Select_TeamMetaDatas_By_TeamSysId


GO


Create Procedure sp_Select_TeamMetaDatas_By_TeamSysId
(
@TeamSysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[TeamSysId],[KeyPath],[KeyValue],[Active]
    FROM [dbo].[TeamMetaData]
    WHERE
        [TeamSysId]=@TeamSysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamMetaData_Select_All'))
drop procedure sp_TeamMetaData_Select_All


GO


Create Procedure sp_TeamMetaData_Select_All
AS
BEGIN
    SELECT [SysId],[PublicId],[TeamSysId],[KeyPath],[KeyValue],[Active]
    FROM [dbo].[TeamMetaData]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamMetaData_Select_One'))
drop procedure sp_TeamMetaData_Select_One


GO


Create Procedure sp_TeamMetaData_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[TeamSysId],[KeyPath],[KeyValue],[Active]
    FROM [dbo].[TeamMetaData]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamMetaData_Insert'))
drop procedure sp_TeamMetaData_Insert


GO


Create Procedure sp_TeamMetaData_Insert
(
@PublicId uniqueidentifier,
@TeamSysId int,
@KeyPath varchar(256),
@KeyValue varchar(512),
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[TeamMetaData]
    (
        [PublicId],
[TeamSysId],
[KeyPath],
[KeyValue],
[Active]
    )
    VALUES
    (
        @PublicId,
@TeamSysId,
@KeyPath,
@KeyValue,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamMetaData_Delete'))
drop procedure sp_TeamMetaData_Delete


GO


Create Procedure sp_TeamMetaData_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[TeamMetaData]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamMetaData_Update'))
drop procedure sp_TeamMetaData_Update


GO


Create Procedure sp_TeamMetaData_Update
(
@SysId int,
@PublicId uniqueidentifier,
@TeamSysId int,
@KeyPath varchar(256),
@KeyValue varchar(512),
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[TeamMetaData]
    SET
        [PublicId]=@PublicId,
        [TeamSysId]=@TeamSysId,
        [KeyPath]=@KeyPath,
        [KeyValue]=@KeyValue,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :Teams
-- 7 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_Teamss_By_TeamStatusSysId'))
drop procedure sp_Select_Teamss_By_TeamStatusSysId


GO


Create Procedure sp_Select_Teamss_By_TeamStatusSysId
(
@TeamStatusSysId int
)
AS
BEGIN
    SELECT [SysId],[TeamStatusSysId],[TeamTypeSysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Is_ReadOnly],[Active]
    FROM [dbo].[Teams]
    WHERE
        [TeamStatusSysId]=@TeamStatusSysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_Teamss_By_TeamTypeSysId'))
drop procedure sp_Select_Teamss_By_TeamTypeSysId


GO


Create Procedure sp_Select_Teamss_By_TeamTypeSysId
(
@TeamTypeSysId int
)
AS
BEGIN
    SELECT [SysId],[TeamStatusSysId],[TeamTypeSysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Is_ReadOnly],[Active]
    FROM [dbo].[Teams]
    WHERE
        [TeamTypeSysId]=@TeamTypeSysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Teams_Select_All'))
drop procedure sp_Teams_Select_All


GO


Create Procedure sp_Teams_Select_All
AS
BEGIN
    SELECT [SysId],[TeamStatusSysId],[TeamTypeSysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Is_ReadOnly],[Active]
    FROM [dbo].[Teams]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Teams_Select_One'))
drop procedure sp_Teams_Select_One


GO


Create Procedure sp_Teams_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[TeamStatusSysId],[TeamTypeSysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Is_ReadOnly],[Active]
    FROM [dbo].[Teams]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Teams_Insert'))
drop procedure sp_Teams_Insert


GO


Create Procedure sp_Teams_Insert
(
@TeamStatusSysId int,
@TeamTypeSysId int,
@PublicId uniqueidentifier,
@Path varchar(1024),
@CreateDate datetime,
@LastModifiedDate datetime,
@Is_ReadOnly bit,
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[Teams]
    (
        [TeamStatusSysId],
[TeamTypeSysId],
[PublicId],
[Path],
[CreateDate],
[LastModifiedDate],
[Is_ReadOnly],
[Active]
    )
    VALUES
    (
        @TeamStatusSysId,
@TeamTypeSysId,
@PublicId,
@Path,
@CreateDate,
@LastModifiedDate,
@Is_ReadOnly,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Teams_Delete'))
drop procedure sp_Teams_Delete


GO


Create Procedure sp_Teams_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[Teams]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Teams_Update'))
drop procedure sp_Teams_Update


GO


Create Procedure sp_Teams_Update
(
@SysId int,
@TeamStatusSysId int,
@TeamTypeSysId int,
@PublicId uniqueidentifier,
@Path varchar(1024),
@CreateDate datetime,
@LastModifiedDate datetime,
@Is_ReadOnly bit,
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[Teams]
    SET
        [TeamStatusSysId]=@TeamStatusSysId,
        [TeamTypeSysId]=@TeamTypeSysId,
        [PublicId]=@PublicId,
        [Path]=@Path,
        [CreateDate]=@CreateDate,
        [LastModifiedDate]=@LastModifiedDate,
        [Is_ReadOnly]=@Is_ReadOnly,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :TeamStatus
-- 5 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamStatus_Select_All'))
drop procedure sp_TeamStatus_Select_All


GO


Create Procedure sp_TeamStatus_Select_All
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[TeamStatus]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamStatus_Select_One'))
drop procedure sp_TeamStatus_Select_One


GO


Create Procedure sp_TeamStatus_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[TeamStatus]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamStatus_Insert'))
drop procedure sp_TeamStatus_Insert


GO


Create Procedure sp_TeamStatus_Insert
(
@PublicId uniqueidentifier,
@Path varchar(1024),
@CreateDate datetime,
@LastModifiedDate datetime,
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[TeamStatus]
    (
        [PublicId],
[Path],
[CreateDate],
[LastModifiedDate],
[Active]
    )
    VALUES
    (
        @PublicId,
@Path,
@CreateDate,
@LastModifiedDate,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamStatus_Delete'))
drop procedure sp_TeamStatus_Delete


GO


Create Procedure sp_TeamStatus_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[TeamStatus]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamStatus_Update'))
drop procedure sp_TeamStatus_Update


GO


Create Procedure sp_TeamStatus_Update
(
@SysId int,
@PublicId uniqueidentifier,
@Path varchar(1024),
@CreateDate datetime,
@LastModifiedDate datetime,
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[TeamStatus]
    SET
        [PublicId]=@PublicId,
        [Path]=@Path,
        [CreateDate]=@CreateDate,
        [LastModifiedDate]=@LastModifiedDate,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :TeamTags
-- 6 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_TeamTagss_By_SysId'))
drop procedure sp_Select_TeamTagss_By_SysId


GO


Create Procedure sp_Select_TeamTagss_By_SysId
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[TeamSysId],[Tag],[CreateDate],[Active]
    FROM [dbo].[TeamTags]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamTags_Select_All'))
drop procedure sp_TeamTags_Select_All


GO


Create Procedure sp_TeamTags_Select_All
AS
BEGIN
    SELECT [SysId],[TeamSysId],[Tag],[CreateDate],[Active]
    FROM [dbo].[TeamTags]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamTags_Select_One'))
drop procedure sp_TeamTags_Select_One


GO


Create Procedure sp_TeamTags_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[TeamSysId],[Tag],[CreateDate],[Active]
    FROM [dbo].[TeamTags]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamTags_Insert'))
drop procedure sp_TeamTags_Insert


GO


Create Procedure sp_TeamTags_Insert
(
@TeamSysId int,
@Tag varchar(50),
@CreateDate datetime,
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[TeamTags]
    (
        [TeamSysId],
[Tag],
[CreateDate],
[Active]
    )
    VALUES
    (
        @TeamSysId,
@Tag,
@CreateDate,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamTags_Delete'))
drop procedure sp_TeamTags_Delete


GO


Create Procedure sp_TeamTags_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[TeamTags]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamTags_Update'))
drop procedure sp_TeamTags_Update


GO


Create Procedure sp_TeamTags_Update
(
@SysId int,
@TeamSysId int,
@Tag varchar(50),
@CreateDate datetime,
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[TeamTags]
    SET
        [TeamSysId]=@TeamSysId,
        [Tag]=@Tag,
        [CreateDate]=@CreateDate,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :TeamTeamMembers
-- 7 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_TeamTeamMemberss_By_TeamMembersysId'))
drop procedure sp_Select_TeamTeamMemberss_By_TeamMembersysId


GO


Create Procedure sp_Select_TeamTeamMemberss_By_TeamMembersysId
(
@TeamMembersysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[TeamSysId],[TeamMembersysId],[CreateDate],[Active]
    FROM [dbo].[TeamTeamMembers]
    WHERE
        [TeamMembersysId]=@TeamMembersysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_TeamTeamMemberss_By_TeamSysId'))
drop procedure sp_Select_TeamTeamMemberss_By_TeamSysId


GO


Create Procedure sp_Select_TeamTeamMemberss_By_TeamSysId
(
@TeamSysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[TeamSysId],[TeamMembersysId],[CreateDate],[Active]
    FROM [dbo].[TeamTeamMembers]
    WHERE
        [TeamSysId]=@TeamSysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamTeamMembers_Select_All'))
drop procedure sp_TeamTeamMembers_Select_All


GO


Create Procedure sp_TeamTeamMembers_Select_All
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[TeamSysId],[TeamMembersysId],[CreateDate],[Active]
    FROM [dbo].[TeamTeamMembers]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamTeamMembers_Select_One'))
drop procedure sp_TeamTeamMembers_Select_One


GO


Create Procedure sp_TeamTeamMembers_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[TeamSysId],[TeamMembersysId],[CreateDate],[Active]
    FROM [dbo].[TeamTeamMembers]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamTeamMembers_Insert'))
drop procedure sp_TeamTeamMembers_Insert


GO


Create Procedure sp_TeamTeamMembers_Insert
(
@PublicId uniqueidentifier,
@Path varchar(1024),
@TeamSysId int,
@TeamMembersysId int,
@CreateDate datetime,
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[TeamTeamMembers]
    (
        [PublicId],
[Path],
[TeamSysId],
[TeamMembersysId],
[CreateDate],
[Active]
    )
    VALUES
    (
        @PublicId,
@Path,
@TeamSysId,
@TeamMembersysId,
@CreateDate,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamTeamMembers_Delete'))
drop procedure sp_TeamTeamMembers_Delete


GO


Create Procedure sp_TeamTeamMembers_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[TeamTeamMembers]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamTeamMembers_Update'))
drop procedure sp_TeamTeamMembers_Update


GO


Create Procedure sp_TeamTeamMembers_Update
(
@SysId int,
@PublicId uniqueidentifier,
@Path varchar(1024),
@TeamSysId int,
@TeamMembersysId int,
@CreateDate datetime,
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[TeamTeamMembers]
    SET
        [PublicId]=@PublicId,
        [Path]=@Path,
        [TeamSysId]=@TeamSysId,
        [TeamMembersysId]=@TeamMembersysId,
        [CreateDate]=@CreateDate,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :TeamTypes
-- 5 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamTypes_Select_All'))
drop procedure sp_TeamTypes_Select_All


GO


Create Procedure sp_TeamTypes_Select_All
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[TeamTypes]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamTypes_Select_One'))
drop procedure sp_TeamTypes_Select_One


GO


Create Procedure sp_TeamTypes_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[TeamTypes]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamTypes_Insert'))
drop procedure sp_TeamTypes_Insert


GO


Create Procedure sp_TeamTypes_Insert
(
@PublicId uniqueidentifier,
@Path varchar(1024),
@CreateDate datetime,
@LastModifiedDate datetime,
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[TeamTypes]
    (
        [PublicId],
[Path],
[CreateDate],
[LastModifiedDate],
[Active]
    )
    VALUES
    (
        @PublicId,
@Path,
@CreateDate,
@LastModifiedDate,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamTypes_Delete'))
drop procedure sp_TeamTypes_Delete


GO


Create Procedure sp_TeamTypes_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[TeamTypes]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TeamTypes_Update'))
drop procedure sp_TeamTypes_Update


GO


Create Procedure sp_TeamTypes_Update
(
@SysId int,
@PublicId uniqueidentifier,
@Path varchar(1024),
@CreateDate datetime,
@LastModifiedDate datetime,
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[TeamTypes]
    SET
        [PublicId]=@PublicId,
        [Path]=@Path,
        [CreateDate]=@CreateDate,
        [LastModifiedDate]=@LastModifiedDate,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :TimeEntryAttributes
-- 6 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_TimeEntryAttributess_By_TimeEntrySysId'))
drop procedure sp_Select_TimeEntryAttributess_By_TimeEntrySysId


GO


Create Procedure sp_Select_TimeEntryAttributess_By_TimeEntrySysId
(
@TimeEntrySysId int
)
AS
BEGIN
    SELECT [SysId],[TimeEntrySysId],[CreateDate],[LastModifiedDate],[TimeEntryDate],[Hours],[Billable],[Note]
    FROM [dbo].[TimeEntryAttributes]
    WHERE
        [TimeEntrySysId]=@TimeEntrySysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TimeEntryAttributes_Select_All'))
drop procedure sp_TimeEntryAttributes_Select_All


GO


Create Procedure sp_TimeEntryAttributes_Select_All
AS
BEGIN
    SELECT [SysId],[TimeEntrySysId],[CreateDate],[LastModifiedDate],[TimeEntryDate],[Hours],[Billable],[Note]
    FROM [dbo].[TimeEntryAttributes]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TimeEntryAttributes_Select_One'))
drop procedure sp_TimeEntryAttributes_Select_One


GO


Create Procedure sp_TimeEntryAttributes_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[TimeEntrySysId],[CreateDate],[LastModifiedDate],[TimeEntryDate],[Hours],[Billable],[Note]
    FROM [dbo].[TimeEntryAttributes]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TimeEntryAttributes_Insert'))
drop procedure sp_TimeEntryAttributes_Insert


GO


Create Procedure sp_TimeEntryAttributes_Insert
(
@TimeEntrySysId int,
@CreateDate datetime,
@LastModifiedDate datetime,
@TimeEntryDate datetime,
@Hours decimal(2,2),
@Billable bit,
@Note varchar(256)
)
AS
BEGIN
    INSERT INTO [dbo].[TimeEntryAttributes]
    (
        [TimeEntrySysId],
[CreateDate],
[LastModifiedDate],
[TimeEntryDate],
[Hours],
[Billable],
[Note]
    )
    VALUES
    (
        @TimeEntrySysId,
@CreateDate,
@LastModifiedDate,
@TimeEntryDate,
@Hours,
@Billable,
@Note

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TimeEntryAttributes_Delete'))
drop procedure sp_TimeEntryAttributes_Delete


GO


Create Procedure sp_TimeEntryAttributes_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[TimeEntryAttributes]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TimeEntryAttributes_Update'))
drop procedure sp_TimeEntryAttributes_Update


GO


Create Procedure sp_TimeEntryAttributes_Update
(
@SysId int,
@TimeEntrySysId int,
@CreateDate datetime,
@LastModifiedDate datetime,
@TimeEntryDate datetime,
@Hours decimal(2,2),
@Billable bit,
@Note varchar(256)
)
AS
BEGIN
    UPDATE [dbo].[TimeEntryAttributes]
    SET
        [TimeEntrySysId]=@TimeEntrySysId,
        [CreateDate]=@CreateDate,
        [LastModifiedDate]=@LastModifiedDate,
        [TimeEntryDate]=@TimeEntryDate,
        [Hours]=@Hours,
        [Billable]=@Billable,
        [Note]=@Note
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :TimeEntryLinks
-- 7 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_TimeEntryLinkss_By_ParentTimeEntrySysId'))
drop procedure sp_Select_TimeEntryLinkss_By_ParentTimeEntrySysId


GO


Create Procedure sp_Select_TimeEntryLinkss_By_ParentTimeEntrySysId
(
@ParentTimeEntrySysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[ParentTimeEntrySysId],[ChildTimeEntrySysId],[LinkPath],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[TimeEntryLinks]
    WHERE
        [ParentTimeEntrySysId]=@ParentTimeEntrySysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_TimeEntryLinkss_By_ChildTimeEntrySysId'))
drop procedure sp_Select_TimeEntryLinkss_By_ChildTimeEntrySysId


GO


Create Procedure sp_Select_TimeEntryLinkss_By_ChildTimeEntrySysId
(
@ChildTimeEntrySysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[ParentTimeEntrySysId],[ChildTimeEntrySysId],[LinkPath],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[TimeEntryLinks]
    WHERE
        [ChildTimeEntrySysId]=@ChildTimeEntrySysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TimeEntryLinks_Select_All'))
drop procedure sp_TimeEntryLinks_Select_All


GO


Create Procedure sp_TimeEntryLinks_Select_All
AS
BEGIN
    SELECT [SysId],[PublicId],[ParentTimeEntrySysId],[ChildTimeEntrySysId],[LinkPath],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[TimeEntryLinks]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TimeEntryLinks_Select_One'))
drop procedure sp_TimeEntryLinks_Select_One


GO


Create Procedure sp_TimeEntryLinks_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[ParentTimeEntrySysId],[ChildTimeEntrySysId],[LinkPath],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[TimeEntryLinks]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TimeEntryLinks_Insert'))
drop procedure sp_TimeEntryLinks_Insert


GO


Create Procedure sp_TimeEntryLinks_Insert
(
@PublicId uniqueidentifier,
@ParentTimeEntrySysId int,
@ChildTimeEntrySysId int,
@LinkPath varchar(512),
@CreateDate datetime,
@LastModifiedDate datetime,
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[TimeEntryLinks]
    (
        [PublicId],
[ParentTimeEntrySysId],
[ChildTimeEntrySysId],
[LinkPath],
[CreateDate],
[LastModifiedDate],
[Active]
    )
    VALUES
    (
        @PublicId,
@ParentTimeEntrySysId,
@ChildTimeEntrySysId,
@LinkPath,
@CreateDate,
@LastModifiedDate,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TimeEntryLinks_Delete'))
drop procedure sp_TimeEntryLinks_Delete


GO


Create Procedure sp_TimeEntryLinks_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[TimeEntryLinks]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TimeEntryLinks_Update'))
drop procedure sp_TimeEntryLinks_Update


GO


Create Procedure sp_TimeEntryLinks_Update
(
@SysId int,
@PublicId uniqueidentifier,
@ParentTimeEntrySysId int,
@ChildTimeEntrySysId int,
@LinkPath varchar(512),
@CreateDate datetime,
@LastModifiedDate datetime,
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[TimeEntryLinks]
    SET
        [PublicId]=@PublicId,
        [ParentTimeEntrySysId]=@ParentTimeEntrySysId,
        [ChildTimeEntrySysId]=@ChildTimeEntrySysId,
        [LinkPath]=@LinkPath,
        [CreateDate]=@CreateDate,
        [LastModifiedDate]=@LastModifiedDate,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :TimeEntryMetaData
-- 6 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_TimeEntryMetaDatas_By_TimeEntrySysId'))
drop procedure sp_Select_TimeEntryMetaDatas_By_TimeEntrySysId


GO


Create Procedure sp_Select_TimeEntryMetaDatas_By_TimeEntrySysId
(
@TimeEntrySysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[TimeEntrySysId],[KeyPath],[KeyValue],[Active]
    FROM [dbo].[TimeEntryMetaData]
    WHERE
        [TimeEntrySysId]=@TimeEntrySysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TimeEntryMetaData_Select_All'))
drop procedure sp_TimeEntryMetaData_Select_All


GO


Create Procedure sp_TimeEntryMetaData_Select_All
AS
BEGIN
    SELECT [SysId],[PublicId],[TimeEntrySysId],[KeyPath],[KeyValue],[Active]
    FROM [dbo].[TimeEntryMetaData]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TimeEntryMetaData_Select_One'))
drop procedure sp_TimeEntryMetaData_Select_One


GO


Create Procedure sp_TimeEntryMetaData_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[TimeEntrySysId],[KeyPath],[KeyValue],[Active]
    FROM [dbo].[TimeEntryMetaData]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TimeEntryMetaData_Insert'))
drop procedure sp_TimeEntryMetaData_Insert


GO


Create Procedure sp_TimeEntryMetaData_Insert
(
@PublicId uniqueidentifier,
@TimeEntrySysId int,
@KeyPath varchar(256),
@KeyValue varchar(512),
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[TimeEntryMetaData]
    (
        [PublicId],
[TimeEntrySysId],
[KeyPath],
[KeyValue],
[Active]
    )
    VALUES
    (
        @PublicId,
@TimeEntrySysId,
@KeyPath,
@KeyValue,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TimeEntryMetaData_Delete'))
drop procedure sp_TimeEntryMetaData_Delete


GO


Create Procedure sp_TimeEntryMetaData_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[TimeEntryMetaData]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TimeEntryMetaData_Update'))
drop procedure sp_TimeEntryMetaData_Update


GO


Create Procedure sp_TimeEntryMetaData_Update
(
@SysId int,
@PublicId uniqueidentifier,
@TimeEntrySysId int,
@KeyPath varchar(256),
@KeyValue varchar(512),
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[TimeEntryMetaData]
    SET
        [PublicId]=@PublicId,
        [TimeEntrySysId]=@TimeEntrySysId,
        [KeyPath]=@KeyPath,
        [KeyValue]=@KeyValue,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :TimeEntrys
-- 7 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_TimeEntryss_By_TimeEntryStatusSysId'))
drop procedure sp_Select_TimeEntryss_By_TimeEntryStatusSysId


GO


Create Procedure sp_Select_TimeEntryss_By_TimeEntryStatusSysId
(
@TimeEntryStatusSysId int
)
AS
BEGIN
    SELECT [SysId],[TimeEntryStatusSysId],[TimeEntryTypeSysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Is_ReadOnly],[Active]
    FROM [dbo].[TimeEntrys]
    WHERE
        [TimeEntryStatusSysId]=@TimeEntryStatusSysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_TimeEntryss_By_TimeEntryTypeSysId'))
drop procedure sp_Select_TimeEntryss_By_TimeEntryTypeSysId


GO


Create Procedure sp_Select_TimeEntryss_By_TimeEntryTypeSysId
(
@TimeEntryTypeSysId int
)
AS
BEGIN
    SELECT [SysId],[TimeEntryStatusSysId],[TimeEntryTypeSysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Is_ReadOnly],[Active]
    FROM [dbo].[TimeEntrys]
    WHERE
        [TimeEntryTypeSysId]=@TimeEntryTypeSysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TimeEntrys_Select_All'))
drop procedure sp_TimeEntrys_Select_All


GO


Create Procedure sp_TimeEntrys_Select_All
AS
BEGIN
    SELECT [SysId],[TimeEntryStatusSysId],[TimeEntryTypeSysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Is_ReadOnly],[Active]
    FROM [dbo].[TimeEntrys]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TimeEntrys_Select_One'))
drop procedure sp_TimeEntrys_Select_One


GO


Create Procedure sp_TimeEntrys_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[TimeEntryStatusSysId],[TimeEntryTypeSysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Is_ReadOnly],[Active]
    FROM [dbo].[TimeEntrys]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TimeEntrys_Insert'))
drop procedure sp_TimeEntrys_Insert


GO


Create Procedure sp_TimeEntrys_Insert
(
@TimeEntryStatusSysId int,
@TimeEntryTypeSysId int,
@PublicId uniqueidentifier,
@Path varchar(1024),
@CreateDate datetime,
@LastModifiedDate datetime,
@Is_ReadOnly bit,
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[TimeEntrys]
    (
        [TimeEntryStatusSysId],
[TimeEntryTypeSysId],
[PublicId],
[Path],
[CreateDate],
[LastModifiedDate],
[Is_ReadOnly],
[Active]
    )
    VALUES
    (
        @TimeEntryStatusSysId,
@TimeEntryTypeSysId,
@PublicId,
@Path,
@CreateDate,
@LastModifiedDate,
@Is_ReadOnly,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TimeEntrys_Delete'))
drop procedure sp_TimeEntrys_Delete


GO


Create Procedure sp_TimeEntrys_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[TimeEntrys]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TimeEntrys_Update'))
drop procedure sp_TimeEntrys_Update


GO


Create Procedure sp_TimeEntrys_Update
(
@SysId int,
@TimeEntryStatusSysId int,
@TimeEntryTypeSysId int,
@PublicId uniqueidentifier,
@Path varchar(1024),
@CreateDate datetime,
@LastModifiedDate datetime,
@Is_ReadOnly bit,
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[TimeEntrys]
    SET
        [TimeEntryStatusSysId]=@TimeEntryStatusSysId,
        [TimeEntryTypeSysId]=@TimeEntryTypeSysId,
        [PublicId]=@PublicId,
        [Path]=@Path,
        [CreateDate]=@CreateDate,
        [LastModifiedDate]=@LastModifiedDate,
        [Is_ReadOnly]=@Is_ReadOnly,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :TimeEntryStatus
-- 5 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TimeEntryStatus_Select_All'))
drop procedure sp_TimeEntryStatus_Select_All


GO


Create Procedure sp_TimeEntryStatus_Select_All
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[TimeEntryStatus]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TimeEntryStatus_Select_One'))
drop procedure sp_TimeEntryStatus_Select_One


GO


Create Procedure sp_TimeEntryStatus_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[TimeEntryStatus]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TimeEntryStatus_Insert'))
drop procedure sp_TimeEntryStatus_Insert


GO


Create Procedure sp_TimeEntryStatus_Insert
(
@PublicId uniqueidentifier,
@Path varchar(1024),
@CreateDate datetime,
@LastModifiedDate datetime,
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[TimeEntryStatus]
    (
        [PublicId],
[Path],
[CreateDate],
[LastModifiedDate],
[Active]
    )
    VALUES
    (
        @PublicId,
@Path,
@CreateDate,
@LastModifiedDate,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TimeEntryStatus_Delete'))
drop procedure sp_TimeEntryStatus_Delete


GO


Create Procedure sp_TimeEntryStatus_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[TimeEntryStatus]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TimeEntryStatus_Update'))
drop procedure sp_TimeEntryStatus_Update


GO


Create Procedure sp_TimeEntryStatus_Update
(
@SysId int,
@PublicId uniqueidentifier,
@Path varchar(1024),
@CreateDate datetime,
@LastModifiedDate datetime,
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[TimeEntryStatus]
    SET
        [PublicId]=@PublicId,
        [Path]=@Path,
        [CreateDate]=@CreateDate,
        [LastModifiedDate]=@LastModifiedDate,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :TimeEntryTags
-- 6 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_TimeEntryTagss_By_SysId'))
drop procedure sp_Select_TimeEntryTagss_By_SysId


GO


Create Procedure sp_Select_TimeEntryTagss_By_SysId
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[TimeEntrySysId],[Tag],[CreateDate],[Active]
    FROM [dbo].[TimeEntryTags]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TimeEntryTags_Select_All'))
drop procedure sp_TimeEntryTags_Select_All


GO


Create Procedure sp_TimeEntryTags_Select_All
AS
BEGIN
    SELECT [SysId],[TimeEntrySysId],[Tag],[CreateDate],[Active]
    FROM [dbo].[TimeEntryTags]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TimeEntryTags_Select_One'))
drop procedure sp_TimeEntryTags_Select_One


GO


Create Procedure sp_TimeEntryTags_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[TimeEntrySysId],[Tag],[CreateDate],[Active]
    FROM [dbo].[TimeEntryTags]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TimeEntryTags_Insert'))
drop procedure sp_TimeEntryTags_Insert


GO


Create Procedure sp_TimeEntryTags_Insert
(
@TimeEntrySysId int,
@Tag varchar(50),
@CreateDate datetime,
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[TimeEntryTags]
    (
        [TimeEntrySysId],
[Tag],
[CreateDate],
[Active]
    )
    VALUES
    (
        @TimeEntrySysId,
@Tag,
@CreateDate,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TimeEntryTags_Delete'))
drop procedure sp_TimeEntryTags_Delete


GO


Create Procedure sp_TimeEntryTags_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[TimeEntryTags]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TimeEntryTags_Update'))
drop procedure sp_TimeEntryTags_Update


GO


Create Procedure sp_TimeEntryTags_Update
(
@SysId int,
@TimeEntrySysId int,
@Tag varchar(50),
@CreateDate datetime,
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[TimeEntryTags]
    SET
        [TimeEntrySysId]=@TimeEntrySysId,
        [Tag]=@Tag,
        [CreateDate]=@CreateDate,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :TimeEntryTypes
-- 5 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TimeEntryTypes_Select_All'))
drop procedure sp_TimeEntryTypes_Select_All


GO


Create Procedure sp_TimeEntryTypes_Select_All
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[TimeEntryTypes]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TimeEntryTypes_Select_One'))
drop procedure sp_TimeEntryTypes_Select_One


GO


Create Procedure sp_TimeEntryTypes_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[TimeEntryTypes]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TimeEntryTypes_Insert'))
drop procedure sp_TimeEntryTypes_Insert


GO


Create Procedure sp_TimeEntryTypes_Insert
(
@PublicId uniqueidentifier,
@Path varchar(1024),
@CreateDate datetime,
@LastModifiedDate datetime,
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[TimeEntryTypes]
    (
        [PublicId],
[Path],
[CreateDate],
[LastModifiedDate],
[Active]
    )
    VALUES
    (
        @PublicId,
@Path,
@CreateDate,
@LastModifiedDate,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TimeEntryTypes_Delete'))
drop procedure sp_TimeEntryTypes_Delete


GO


Create Procedure sp_TimeEntryTypes_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[TimeEntryTypes]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_TimeEntryTypes_Update'))
drop procedure sp_TimeEntryTypes_Update


GO


Create Procedure sp_TimeEntryTypes_Update
(
@SysId int,
@PublicId uniqueidentifier,
@Path varchar(1024),
@CreateDate datetime,
@LastModifiedDate datetime,
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[TimeEntryTypes]
    SET
        [PublicId]=@PublicId,
        [Path]=@Path,
        [CreateDate]=@CreateDate,
        [LastModifiedDate]=@LastModifiedDate,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :UserAttributes
-- 6 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_UserAttributess_By_UserSysId'))
drop procedure sp_Select_UserAttributess_By_UserSysId


GO


Create Procedure sp_Select_UserAttributess_By_UserSysId
(
@UserSysId int
)
AS
BEGIN
    SELECT [SysId],[UserSysId],[CreateDate],[LastModifiedDate],[Email],[FirstName],[LastName]
    FROM [dbo].[UserAttributes]
    WHERE
        [UserSysId]=@UserSysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_UserAttributes_Select_All'))
drop procedure sp_UserAttributes_Select_All


GO


Create Procedure sp_UserAttributes_Select_All
AS
BEGIN
    SELECT [SysId],[UserSysId],[CreateDate],[LastModifiedDate],[Email],[FirstName],[LastName]
    FROM [dbo].[UserAttributes]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_UserAttributes_Select_One'))
drop procedure sp_UserAttributes_Select_One


GO


Create Procedure sp_UserAttributes_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[UserSysId],[CreateDate],[LastModifiedDate],[Email],[FirstName],[LastName]
    FROM [dbo].[UserAttributes]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_UserAttributes_Insert'))
drop procedure sp_UserAttributes_Insert


GO


Create Procedure sp_UserAttributes_Insert
(
@UserSysId int,
@CreateDate datetime,
@LastModifiedDate datetime,
@Email varchar(150),
@FirstName varchar(150),
@LastName varchar(150)
)
AS
BEGIN
    INSERT INTO [dbo].[UserAttributes]
    (
        [UserSysId],
[CreateDate],
[LastModifiedDate],
[Email],
[FirstName],
[LastName]
    )
    VALUES
    (
        @UserSysId,
@CreateDate,
@LastModifiedDate,
@Email,
@FirstName,
@LastName

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_UserAttributes_Delete'))
drop procedure sp_UserAttributes_Delete


GO


Create Procedure sp_UserAttributes_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[UserAttributes]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_UserAttributes_Update'))
drop procedure sp_UserAttributes_Update


GO


Create Procedure sp_UserAttributes_Update
(
@SysId int,
@UserSysId int,
@CreateDate datetime,
@LastModifiedDate datetime,
@Email varchar(150),
@FirstName varchar(150),
@LastName varchar(150)
)
AS
BEGIN
    UPDATE [dbo].[UserAttributes]
    SET
        [UserSysId]=@UserSysId,
        [CreateDate]=@CreateDate,
        [LastModifiedDate]=@LastModifiedDate,
        [Email]=@Email,
        [FirstName]=@FirstName,
        [LastName]=@LastName
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :UserLinks
-- 7 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_UserLinkss_By_ParentUserSysId'))
drop procedure sp_Select_UserLinkss_By_ParentUserSysId


GO


Create Procedure sp_Select_UserLinkss_By_ParentUserSysId
(
@ParentUserSysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[ParentUserSysId],[ChildUserSysId],[LinkPath],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[UserLinks]
    WHERE
        [ParentUserSysId]=@ParentUserSysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_UserLinkss_By_ChildUserSysId'))
drop procedure sp_Select_UserLinkss_By_ChildUserSysId


GO


Create Procedure sp_Select_UserLinkss_By_ChildUserSysId
(
@ChildUserSysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[ParentUserSysId],[ChildUserSysId],[LinkPath],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[UserLinks]
    WHERE
        [ChildUserSysId]=@ChildUserSysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_UserLinks_Select_All'))
drop procedure sp_UserLinks_Select_All


GO


Create Procedure sp_UserLinks_Select_All
AS
BEGIN
    SELECT [SysId],[PublicId],[ParentUserSysId],[ChildUserSysId],[LinkPath],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[UserLinks]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_UserLinks_Select_One'))
drop procedure sp_UserLinks_Select_One


GO


Create Procedure sp_UserLinks_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[ParentUserSysId],[ChildUserSysId],[LinkPath],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[UserLinks]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_UserLinks_Insert'))
drop procedure sp_UserLinks_Insert


GO


Create Procedure sp_UserLinks_Insert
(
@PublicId uniqueidentifier,
@ParentUserSysId int,
@ChildUserSysId int,
@LinkPath varchar(512),
@CreateDate datetime,
@LastModifiedDate datetime,
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[UserLinks]
    (
        [PublicId],
[ParentUserSysId],
[ChildUserSysId],
[LinkPath],
[CreateDate],
[LastModifiedDate],
[Active]
    )
    VALUES
    (
        @PublicId,
@ParentUserSysId,
@ChildUserSysId,
@LinkPath,
@CreateDate,
@LastModifiedDate,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_UserLinks_Delete'))
drop procedure sp_UserLinks_Delete


GO


Create Procedure sp_UserLinks_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[UserLinks]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_UserLinks_Update'))
drop procedure sp_UserLinks_Update


GO


Create Procedure sp_UserLinks_Update
(
@SysId int,
@PublicId uniqueidentifier,
@ParentUserSysId int,
@ChildUserSysId int,
@LinkPath varchar(512),
@CreateDate datetime,
@LastModifiedDate datetime,
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[UserLinks]
    SET
        [PublicId]=@PublicId,
        [ParentUserSysId]=@ParentUserSysId,
        [ChildUserSysId]=@ChildUserSysId,
        [LinkPath]=@LinkPath,
        [CreateDate]=@CreateDate,
        [LastModifiedDate]=@LastModifiedDate,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :UserMetaData
-- 6 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_UserMetaDatas_By_UserSysId'))
drop procedure sp_Select_UserMetaDatas_By_UserSysId


GO


Create Procedure sp_Select_UserMetaDatas_By_UserSysId
(
@UserSysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[UserSysId],[KeyPath],[KeyValue],[Active]
    FROM [dbo].[UserMetaData]
    WHERE
        [UserSysId]=@UserSysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_UserMetaData_Select_All'))
drop procedure sp_UserMetaData_Select_All


GO


Create Procedure sp_UserMetaData_Select_All
AS
BEGIN
    SELECT [SysId],[PublicId],[UserSysId],[KeyPath],[KeyValue],[Active]
    FROM [dbo].[UserMetaData]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_UserMetaData_Select_One'))
drop procedure sp_UserMetaData_Select_One


GO


Create Procedure sp_UserMetaData_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[UserSysId],[KeyPath],[KeyValue],[Active]
    FROM [dbo].[UserMetaData]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_UserMetaData_Insert'))
drop procedure sp_UserMetaData_Insert


GO


Create Procedure sp_UserMetaData_Insert
(
@PublicId uniqueidentifier,
@UserSysId int,
@KeyPath varchar(256),
@KeyValue varchar(512),
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[UserMetaData]
    (
        [PublicId],
[UserSysId],
[KeyPath],
[KeyValue],
[Active]
    )
    VALUES
    (
        @PublicId,
@UserSysId,
@KeyPath,
@KeyValue,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_UserMetaData_Delete'))
drop procedure sp_UserMetaData_Delete


GO


Create Procedure sp_UserMetaData_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[UserMetaData]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_UserMetaData_Update'))
drop procedure sp_UserMetaData_Update


GO


Create Procedure sp_UserMetaData_Update
(
@SysId int,
@PublicId uniqueidentifier,
@UserSysId int,
@KeyPath varchar(256),
@KeyValue varchar(512),
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[UserMetaData]
    SET
        [PublicId]=@PublicId,
        [UserSysId]=@UserSysId,
        [KeyPath]=@KeyPath,
        [KeyValue]=@KeyValue,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :Users
-- 7 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_Userss_By_UserStatusSysId'))
drop procedure sp_Select_Userss_By_UserStatusSysId


GO


Create Procedure sp_Select_Userss_By_UserStatusSysId
(
@UserStatusSysId int
)
AS
BEGIN
    SELECT [SysId],[UserStatusSysId],[UserTypeSysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Is_ReadOnly],[Active]
    FROM [dbo].[Users]
    WHERE
        [UserStatusSysId]=@UserStatusSysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_Userss_By_UserTypeSysId'))
drop procedure sp_Select_Userss_By_UserTypeSysId


GO


Create Procedure sp_Select_Userss_By_UserTypeSysId
(
@UserTypeSysId int
)
AS
BEGIN
    SELECT [SysId],[UserStatusSysId],[UserTypeSysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Is_ReadOnly],[Active]
    FROM [dbo].[Users]
    WHERE
        [UserTypeSysId]=@UserTypeSysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Users_Select_All'))
drop procedure sp_Users_Select_All


GO


Create Procedure sp_Users_Select_All
AS
BEGIN
    SELECT [SysId],[UserStatusSysId],[UserTypeSysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Is_ReadOnly],[Active]
    FROM [dbo].[Users]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Users_Select_One'))
drop procedure sp_Users_Select_One


GO


Create Procedure sp_Users_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[UserStatusSysId],[UserTypeSysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Is_ReadOnly],[Active]
    FROM [dbo].[Users]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Users_Insert'))
drop procedure sp_Users_Insert


GO


Create Procedure sp_Users_Insert
(
@UserStatusSysId int,
@UserTypeSysId int,
@PublicId uniqueidentifier,
@Path varchar(1024),
@CreateDate datetime,
@LastModifiedDate datetime,
@Is_ReadOnly bit,
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[Users]
    (
        [UserStatusSysId],
[UserTypeSysId],
[PublicId],
[Path],
[CreateDate],
[LastModifiedDate],
[Is_ReadOnly],
[Active]
    )
    VALUES
    (
        @UserStatusSysId,
@UserTypeSysId,
@PublicId,
@Path,
@CreateDate,
@LastModifiedDate,
@Is_ReadOnly,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Users_Delete'))
drop procedure sp_Users_Delete


GO


Create Procedure sp_Users_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[Users]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Users_Update'))
drop procedure sp_Users_Update


GO


Create Procedure sp_Users_Update
(
@SysId int,
@UserStatusSysId int,
@UserTypeSysId int,
@PublicId uniqueidentifier,
@Path varchar(1024),
@CreateDate datetime,
@LastModifiedDate datetime,
@Is_ReadOnly bit,
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[Users]
    SET
        [UserStatusSysId]=@UserStatusSysId,
        [UserTypeSysId]=@UserTypeSysId,
        [PublicId]=@PublicId,
        [Path]=@Path,
        [CreateDate]=@CreateDate,
        [LastModifiedDate]=@LastModifiedDate,
        [Is_ReadOnly]=@Is_ReadOnly,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :UserStatus
-- 5 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_UserStatus_Select_All'))
drop procedure sp_UserStatus_Select_All


GO


Create Procedure sp_UserStatus_Select_All
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[UserStatus]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_UserStatus_Select_One'))
drop procedure sp_UserStatus_Select_One


GO


Create Procedure sp_UserStatus_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[UserStatus]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_UserStatus_Insert'))
drop procedure sp_UserStatus_Insert


GO


Create Procedure sp_UserStatus_Insert
(
@PublicId uniqueidentifier,
@Path varchar(1024),
@CreateDate datetime,
@LastModifiedDate datetime,
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[UserStatus]
    (
        [PublicId],
[Path],
[CreateDate],
[LastModifiedDate],
[Active]
    )
    VALUES
    (
        @PublicId,
@Path,
@CreateDate,
@LastModifiedDate,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_UserStatus_Delete'))
drop procedure sp_UserStatus_Delete


GO


Create Procedure sp_UserStatus_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[UserStatus]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_UserStatus_Update'))
drop procedure sp_UserStatus_Update


GO


Create Procedure sp_UserStatus_Update
(
@SysId int,
@PublicId uniqueidentifier,
@Path varchar(1024),
@CreateDate datetime,
@LastModifiedDate datetime,
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[UserStatus]
    SET
        [PublicId]=@PublicId,
        [Path]=@Path,
        [CreateDate]=@CreateDate,
        [LastModifiedDate]=@LastModifiedDate,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :UserTags
-- 6 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_UserTagss_By_SysId'))
drop procedure sp_Select_UserTagss_By_SysId


GO


Create Procedure sp_Select_UserTagss_By_SysId
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[UserSysId],[Tag],[CreateDate],[Active]
    FROM [dbo].[UserTags]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_UserTags_Select_All'))
drop procedure sp_UserTags_Select_All


GO


Create Procedure sp_UserTags_Select_All
AS
BEGIN
    SELECT [SysId],[UserSysId],[Tag],[CreateDate],[Active]
    FROM [dbo].[UserTags]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_UserTags_Select_One'))
drop procedure sp_UserTags_Select_One


GO


Create Procedure sp_UserTags_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[UserSysId],[Tag],[CreateDate],[Active]
    FROM [dbo].[UserTags]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_UserTags_Insert'))
drop procedure sp_UserTags_Insert


GO


Create Procedure sp_UserTags_Insert
(
@UserSysId int,
@Tag varchar(50),
@CreateDate datetime,
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[UserTags]
    (
        [UserSysId],
[Tag],
[CreateDate],
[Active]
    )
    VALUES
    (
        @UserSysId,
@Tag,
@CreateDate,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_UserTags_Delete'))
drop procedure sp_UserTags_Delete


GO


Create Procedure sp_UserTags_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[UserTags]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_UserTags_Update'))
drop procedure sp_UserTags_Update


GO


Create Procedure sp_UserTags_Update
(
@SysId int,
@UserSysId int,
@Tag varchar(50),
@CreateDate datetime,
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[UserTags]
    SET
        [UserSysId]=@UserSysId,
        [Tag]=@Tag,
        [CreateDate]=@CreateDate,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :UserTeamMembers
-- 7 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_UserTeamMemberss_By_TeamMembersysId'))
drop procedure sp_Select_UserTeamMemberss_By_TeamMembersysId


GO


Create Procedure sp_Select_UserTeamMemberss_By_TeamMembersysId
(
@TeamMembersysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[UserSysId],[TeamMembersysId],[CreateDate],[Active]
    FROM [dbo].[UserTeamMembers]
    WHERE
        [TeamMembersysId]=@TeamMembersysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Select_UserTeamMemberss_By_UserSysId'))
drop procedure sp_Select_UserTeamMemberss_By_UserSysId


GO


Create Procedure sp_Select_UserTeamMemberss_By_UserSysId
(
@UserSysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[UserSysId],[TeamMembersysId],[CreateDate],[Active]
    FROM [dbo].[UserTeamMembers]
    WHERE
        [UserSysId]=@UserSysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_UserTeamMembers_Select_All'))
drop procedure sp_UserTeamMembers_Select_All


GO


Create Procedure sp_UserTeamMembers_Select_All
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[UserSysId],[TeamMembersysId],[CreateDate],[Active]
    FROM [dbo].[UserTeamMembers]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_UserTeamMembers_Select_One'))
drop procedure sp_UserTeamMembers_Select_One


GO


Create Procedure sp_UserTeamMembers_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[UserSysId],[TeamMembersysId],[CreateDate],[Active]
    FROM [dbo].[UserTeamMembers]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_UserTeamMembers_Insert'))
drop procedure sp_UserTeamMembers_Insert


GO


Create Procedure sp_UserTeamMembers_Insert
(
@PublicId uniqueidentifier,
@Path varchar(1024),
@UserSysId int,
@TeamMembersysId int,
@CreateDate datetime,
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[UserTeamMembers]
    (
        [PublicId],
[Path],
[UserSysId],
[TeamMembersysId],
[CreateDate],
[Active]
    )
    VALUES
    (
        @PublicId,
@Path,
@UserSysId,
@TeamMembersysId,
@CreateDate,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_UserTeamMembers_Delete'))
drop procedure sp_UserTeamMembers_Delete


GO


Create Procedure sp_UserTeamMembers_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[UserTeamMembers]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_UserTeamMembers_Update'))
drop procedure sp_UserTeamMembers_Update


GO


Create Procedure sp_UserTeamMembers_Update
(
@SysId int,
@PublicId uniqueidentifier,
@Path varchar(1024),
@UserSysId int,
@TeamMembersysId int,
@CreateDate datetime,
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[UserTeamMembers]
    SET
        [PublicId]=@PublicId,
        [Path]=@Path,
        [UserSysId]=@UserSysId,
        [TeamMembersysId]=@TeamMembersysId,
        [CreateDate]=@CreateDate,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :UserTypes
-- 5 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_UserTypes_Select_All'))
drop procedure sp_UserTypes_Select_All


GO


Create Procedure sp_UserTypes_Select_All
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[UserTypes]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_UserTypes_Select_One'))
drop procedure sp_UserTypes_Select_One


GO


Create Procedure sp_UserTypes_Select_One
(
@SysId int
)
AS
BEGIN
    SELECT [SysId],[PublicId],[Path],[CreateDate],[LastModifiedDate],[Active]
    FROM [dbo].[UserTypes]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_UserTypes_Insert'))
drop procedure sp_UserTypes_Insert


GO


Create Procedure sp_UserTypes_Insert
(
@PublicId uniqueidentifier,
@Path varchar(1024),
@CreateDate datetime,
@LastModifiedDate datetime,
@Active bit
)
AS
BEGIN
    INSERT INTO [dbo].[UserTypes]
    (
        [PublicId],
[Path],
[CreateDate],
[LastModifiedDate],
[Active]
    )
    VALUES
    (
        @PublicId,
@Path,
@CreateDate,
@LastModifiedDate,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_UserTypes_Delete'))
drop procedure sp_UserTypes_Delete


GO


Create Procedure sp_UserTypes_Delete
(
@SysId int
)
AS
BEGIN
    DELETE FROM [dbo].[UserTypes]
    WHERE
        [SysId]=@SysId
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_UserTypes_Update'))
drop procedure sp_UserTypes_Update


GO


Create Procedure sp_UserTypes_Update
(
@SysId int,
@PublicId uniqueidentifier,
@Path varchar(1024),
@CreateDate datetime,
@LastModifiedDate datetime,
@Active bit
)
AS
BEGIN
    UPDATE [dbo].[UserTypes]
    SET
        [PublicId]=@PublicId,
        [Path]=@Path,
        [CreateDate]=@CreateDate,
        [LastModifiedDate]=@LastModifiedDate,
        [Active]=@Active
WHERE        [SysId]=@SysId
END

GO


-- The %D% at %T% :Attributes
-- 5 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Attributes_Select_All'))
drop procedure sp_Attributes_Select_All


GO


Create Procedure sp_Attributes_Select_All
AS
BEGIN
    SELECT [Id],[ObjectTitle],[Name],[DataType],[Active]
    FROM [meta].[Attributes]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Attributes_Select_One'))
drop procedure sp_Attributes_Select_One


GO


Create Procedure sp_Attributes_Select_One
(
@Id int
)
AS
BEGIN
    SELECT [Id],[ObjectTitle],[Name],[DataType],[Active]
    FROM [meta].[Attributes]
    WHERE
        [Id]=@Id
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Attributes_Insert'))
drop procedure sp_Attributes_Insert


GO


Create Procedure sp_Attributes_Insert
(
@ObjectTitle varchar(50),
@Name varchar(50),
@DataType varchar(50),
@Active bit
)
AS
BEGIN
    INSERT INTO [meta].[Attributes]
    (
        [ObjectTitle],
[Name],
[DataType],
[Active]
    )
    VALUES
    (
        @ObjectTitle,
@Name,
@DataType,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Attributes_Delete'))
drop procedure sp_Attributes_Delete


GO


Create Procedure sp_Attributes_Delete
(
@Id int
)
AS
BEGIN
    DELETE FROM [meta].[Attributes]
    WHERE
        [Id]=@Id
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Attributes_Update'))
drop procedure sp_Attributes_Update


GO


Create Procedure sp_Attributes_Update
(
@Id int,
@ObjectTitle varchar(50),
@Name varchar(50),
@DataType varchar(50),
@Active bit
)
AS
BEGIN
    UPDATE [meta].[Attributes]
    SET
        [ObjectTitle]=@ObjectTitle,
        [Name]=@Name,
        [DataType]=@DataType,
        [Active]=@Active
WHERE        [Id]=@Id
END

GO


-- The %D% at %T% :Objects
-- 5 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Objects_Select_All'))
drop procedure sp_Objects_Select_All


GO


Create Procedure sp_Objects_Select_All
AS
BEGIN
    SELECT [Id],[Title],[Path],[Active]
    FROM [meta].[Objects]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Objects_Select_One'))
drop procedure sp_Objects_Select_One


GO


Create Procedure sp_Objects_Select_One
(
@Id int
)
AS
BEGIN
    SELECT [Id],[Title],[Path],[Active]
    FROM [meta].[Objects]
    WHERE
        [Id]=@Id
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Objects_Insert'))
drop procedure sp_Objects_Insert


GO


Create Procedure sp_Objects_Insert
(
@Title varchar(150),
@Path varchar(512),
@Active bit
)
AS
BEGIN
    INSERT INTO [meta].[Objects]
    (
        [Title],
[Path],
[Active]
    )
    VALUES
    (
        @Title,
@Path,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Objects_Delete'))
drop procedure sp_Objects_Delete


GO


Create Procedure sp_Objects_Delete
(
@Id int
)
AS
BEGIN
    DELETE FROM [meta].[Objects]
    WHERE
        [Id]=@Id
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Objects_Update'))
drop procedure sp_Objects_Update


GO


Create Procedure sp_Objects_Update
(
@Id int,
@Title varchar(150),
@Path varchar(512),
@Active bit
)
AS
BEGIN
    UPDATE [meta].[Objects]
    SET
        [Title]=@Title,
        [Path]=@Path,
        [Active]=@Active
WHERE        [Id]=@Id
END

GO


-- The %D% at %T% :Relations
-- 5 stored procedures to generate.


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Relations_Select_All'))
drop procedure sp_Relations_Select_All


GO


Create Procedure sp_Relations_Select_All
AS
BEGIN
    SELECT [Id],[Parent],[Child],[Active]
    FROM [meta].[Relations]
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Relations_Select_One'))
drop procedure sp_Relations_Select_One


GO


Create Procedure sp_Relations_Select_One
(
@Id int
)
AS
BEGIN
    SELECT [Id],[Parent],[Child],[Active]
    FROM [meta].[Relations]
    WHERE
        [Id]=@Id
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Relations_Insert'))
drop procedure sp_Relations_Insert


GO


Create Procedure sp_Relations_Insert
(
@Parent varchar(50),
@Child varchar(50),
@Active bit
)
AS
BEGIN
    INSERT INTO [meta].[Relations]
    (
        [Parent],
[Child],
[Active]
    )
    VALUES
    (
        @Parent,
@Child,
@Active

    )
    Select @@identity;
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Relations_Delete'))
drop procedure sp_Relations_Delete


GO


Create Procedure sp_Relations_Delete
(
@Id int
)
AS
BEGIN
    DELETE FROM [meta].[Relations]
    WHERE
        [Id]=@Id
END

GO


if exists (select * from sys.objects where ([type] = 'P' and [name]='sp_Relations_Update'))
drop procedure sp_Relations_Update


GO


Create Procedure sp_Relations_Update
(
@Id int,
@Parent varchar(50),
@Child varchar(50),
@Active bit
)
AS
BEGIN
    UPDATE [meta].[Relations]
    SET
        [Parent]=@Parent,
        [Child]=@Child,
        [Active]=@Active
WHERE        [Id]=@Id
END

GO


